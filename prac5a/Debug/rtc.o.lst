   1              		.cpu arm7tdmi
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 18, 4
  11              		.file	"rtc.c"
  21              	.Ltext0:
  22              		.file 1 "../rtc.c"
 1777              		.align	2
 1778              		.global	isr_TICK_dummy
 1780              	isr_TICK_dummy:
 1781              	.LFB0:
   1:../rtc.c      **** #include "rtc.h"
   2:../rtc.c      **** #include "44b.h"
   3:../rtc.c      **** #include "intcontroller.h"
   4:../rtc.c      **** 
   5:../rtc.c      **** void isr_TICK_dummy(void)  __attribute__ ((interrupt ("IRQ")));
   6:../rtc.c      **** void isr_ALARM_dummy(void) __attribute__ ((interrupt ("IRQ")));
   7:../rtc.c      **** 
   8:../rtc.c      **** void isr_TICK_dummy(void){
 1782              		.loc 1 8 0
 1783              		.cfi_startproc
 1784              		@ Interrupt Service Routine.
 1785              		@ args = 0, pretend = 0, frame = 0
 1786              		@ frame_needed = 1, uses_anonymous_args = 0
 1787 0000 04C02DE5 		str	ip, [sp, #-4]!
 1788 0004 0DC0A0E1 		mov	ip, sp
 1789              	.LCFI0:
 1790              		.cfi_def_cfa_register 12
 1791 0008 0FD82DE9 		stmfd	sp!, {r0, r1, r2, r3, fp, ip, lr, pc}
 1792 000c 04B04CE2 		sub	fp, ip, #4
 1793              		.cfi_offset 14, -8
 1794              		.cfi_offset 13, -12
 1795              		.cfi_offset 11, -16
 1796              		.cfi_offset 3, -20
 1797              		.cfi_offset 2, -24
 1798              		.cfi_offset 1, -28
 1799              		.cfi_offset 0, -32
 1800              	.LCFI1:
 1801              		.cfi_def_cfa 11, 4
   9:../rtc.c      **** 	ic_cleanflag(INT_TICK);
 1802              		.loc 1 9 0
 1803 0010 1400A0E3 		mov	r0, #20
 1804 0014 FEFFFFEB 		bl	ic_cleanflag
  10:../rtc.c      **** }
 1805              		.loc 1 10 0
 1806 0018 1CD04BE2 		sub	sp, fp, #28
 1807 001c 0F689DE8 		ldmfd	sp, {r0, r1, r2, r3, fp, sp, lr}
 1808 0020 04C09DE4 		ldmfd	sp!, {ip}
 1809 0024 04F05EE2 		subs	pc, lr, #4
 1810              		.cfi_endproc
 1811              	.LFE0:
 1813              		.align	2
 1814              		.global	isr_ALARM_dummy
 1816              	isr_ALARM_dummy:
 1817              	.LFB1:
  11:../rtc.c      **** 
  12:../rtc.c      **** void isr_ALARM_dummy(void){
 1818              		.loc 1 12 0
 1819              		.cfi_startproc
 1820              		@ Interrupt Service Routine.
 1821              		@ args = 0, pretend = 0, frame = 0
 1822              		@ frame_needed = 1, uses_anonymous_args = 0
 1823 0028 04C02DE5 		str	ip, [sp, #-4]!
 1824 002c 0DC0A0E1 		mov	ip, sp
 1825              	.LCFI2:
 1826              		.cfi_def_cfa_register 12
 1827 0030 0FD82DE9 		stmfd	sp!, {r0, r1, r2, r3, fp, ip, lr, pc}
 1828 0034 04B04CE2 		sub	fp, ip, #4
 1829              		.cfi_offset 14, -8
 1830              		.cfi_offset 13, -12
 1831              		.cfi_offset 11, -16
 1832              		.cfi_offset 3, -20
 1833              		.cfi_offset 2, -24
 1834              		.cfi_offset 1, -28
 1835              		.cfi_offset 0, -32
 1836              	.LCFI3:
 1837              		.cfi_def_cfa 11, 4
  13:../rtc.c      **** 	ic_cleanflag(INT_RTC);
 1838              		.loc 1 13 0
 1839 0038 0100A0E3 		mov	r0, #1
 1840 003c FEFFFFEB 		bl	ic_cleanflag
  14:../rtc.c      **** }
 1841              		.loc 1 14 0
 1842 0040 1CD04BE2 		sub	sp, fp, #28
 1843 0044 0F689DE8 		ldmfd	sp, {r0, r1, r2, r3, fp, sp, lr}
 1844 0048 04C09DE4 		ldmfd	sp!, {ip}
 1845 004c 04F05EE2 		subs	pc, lr, #4
 1846              		.cfi_endproc
 1847              	.LFE1:
 1849              		.align	2
 1850              		.global	rtc_init
 1852              	rtc_init:
 1853              	.LFB2:
  15:../rtc.c      **** 
  16:../rtc.c      **** void rtc_init( void )
  17:../rtc.c      **** {
 1854              		.loc 1 17 0
 1855              		.cfi_startproc
 1856              		@ Function supports interworking.
 1857              		@ args = 0, pretend = 0, frame = 0
 1858              		@ frame_needed = 1, uses_anonymous_args = 0
 1859 0050 0DC0A0E1 		mov	ip, sp
 1860              	.LCFI4:
 1861              		.cfi_def_cfa_register 12
 1862 0054 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1863 0058 04B04CE2 		sub	fp, ip, #4
 1864              		.cfi_offset 14, -8
 1865              		.cfi_offset 13, -12
 1866              		.cfi_offset 11, -16
 1867              	.LCFI5:
 1868              		.cfi_def_cfa 11, 4
  18:../rtc.c      **** 	//Disable Tick interrupt
  19:../rtc.c      ****     rTICINT   = 0x0;
 1869              		.loc 1 19 0
 1870 005c EC309FE5 		ldr	r3, .L4
 1871 0060 0020A0E3 		mov	r2, #0
 1872 0064 0020C3E5 		strb	r2, [r3, #0]
  20:../rtc.c      **** 
  21:../rtc.c      ****     //Disable alarm
  22:../rtc.c      ****     rRTCALM  = 0x0;
 1873              		.loc 1 22 0
 1874 0068 E4309FE5 		ldr	r3, .L4+4
 1875 006c 0020A0E3 		mov	r2, #0
 1876 0070 0020C3E5 		strb	r2, [r3, #0]
  23:../rtc.c      **** 
  24:../rtc.c      ****     //Disable Rounding
  25:../rtc.c      ****     rRTCRST  = 0x0;
 1877              		.loc 1 25 0
 1878 0074 DC309FE5 		ldr	r3, .L4+8
 1879 0078 0020A0E3 		mov	r2, #0
 1880 007c 0020C3E5 		strb	r2, [r3, #0]
  26:../rtc.c      **** 
  27:../rtc.c      **** 
  28:../rtc.c      ****     // RTCCON[2] = 0 merged BCD registers: única opción posible
  29:../rtc.c      ****     // RTCCON[1] = 0 Fuente de reloj primaria: única opción posible: XTAL
  30:../rtc.c      ****     // RTCCON[0] = 1 Enabled register read/write
  31:../rtc.c      ****     rRTCCON  = 0x1;
 1881              		.loc 1 31 0
 1882 0080 D4309FE5 		ldr	r3, .L4+12
 1883 0084 0120A0E3 		mov	r2, #1
 1884 0088 0020C3E5 		strb	r2, [r3, #0]
  32:../rtc.c      **** 
  33:../rtc.c      ****     //Set to 00:00:00 1/1/2021
  34:../rtc.c      ****     rBCDYEAR = 0x2 << 4 | 0x1;
 1885              		.loc 1 34 0
 1886 008c CC309FE5 		ldr	r3, .L4+16
 1887 0090 2120A0E3 		mov	r2, #33
 1888 0094 0020C3E5 		strb	r2, [r3, #0]
  35:../rtc.c      ****     rBCDMON  = 0x1;
 1889              		.loc 1 35 0
 1890 0098 C4309FE5 		ldr	r3, .L4+20
 1891 009c 0120A0E3 		mov	r2, #1
 1892 00a0 0020C3E5 		strb	r2, [r3, #0]
  36:../rtc.c      ****     rBCDDAY  = 0x1;
 1893              		.loc 1 36 0
 1894 00a4 BC309FE5 		ldr	r3, .L4+24
 1895 00a8 0120A0E3 		mov	r2, #1
 1896 00ac 0020C3E5 		strb	r2, [r3, #0]
  37:../rtc.c      ****     rBCDDATE = 0x4;
 1897              		.loc 1 37 0
 1898 00b0 B4309FE5 		ldr	r3, .L4+28
 1899 00b4 0420A0E3 		mov	r2, #4
 1900 00b8 0020C3E5 		strb	r2, [r3, #0]
  38:../rtc.c      ****     rBCDHOUR = 0x0;
 1901              		.loc 1 38 0
 1902 00bc AC309FE5 		ldr	r3, .L4+32
 1903 00c0 0020A0E3 		mov	r2, #0
 1904 00c4 0020C3E5 		strb	r2, [r3, #0]
  39:../rtc.c      ****     rBCDMIN  = 0x0;
 1905              		.loc 1 39 0
 1906 00c8 A4309FE5 		ldr	r3, .L4+36
 1907 00cc 0020A0E3 		mov	r2, #0
 1908 00d0 0020C3E5 		strb	r2, [r3, #0]
  40:../rtc.c      ****     rBCDSEC  = 0x0;
 1909              		.loc 1 40 0
 1910 00d4 9C309FE5 		ldr	r3, .L4+40
 1911 00d8 0020A0E3 		mov	r2, #0
 1912 00dc 0020C3E5 		strb	r2, [r3, #0]
  41:../rtc.c      **** 
  42:../rtc.c      ****     //Init to 0
  43:../rtc.c      ****     rALMYEAR = 0;
 1913              		.loc 1 43 0
 1914 00e0 94309FE5 		ldr	r3, .L4+44
 1915 00e4 0020A0E3 		mov	r2, #0
 1916 00e8 0020C3E5 		strb	r2, [r3, #0]
  44:../rtc.c      ****     rALMMON  = 0;
 1917              		.loc 1 44 0
 1918 00ec 8C309FE5 		ldr	r3, .L4+48
 1919 00f0 0020A0E3 		mov	r2, #0
 1920 00f4 0020C3E5 		strb	r2, [r3, #0]
  45:../rtc.c      ****     rALMDAY  = 0;
 1921              		.loc 1 45 0
 1922 00f8 84309FE5 		ldr	r3, .L4+52
 1923 00fc 0020A0E3 		mov	r2, #0
 1924 0100 0020C3E5 		strb	r2, [r3, #0]
  46:../rtc.c      ****     rALMHOUR = 0;
 1925              		.loc 1 46 0
 1926 0104 7C309FE5 		ldr	r3, .L4+56
 1927 0108 0020A0E3 		mov	r2, #0
 1928 010c 0020C3E5 		strb	r2, [r3, #0]
  47:../rtc.c      ****     rALMMIN  = 0;
 1929              		.loc 1 47 0
 1930 0110 74309FE5 		ldr	r3, .L4+60
 1931 0114 0020A0E3 		mov	r2, #0
 1932 0118 0020C3E5 		strb	r2, [r3, #0]
  48:../rtc.c      ****     rALMSEC  = 0;
 1933              		.loc 1 48 0
 1934 011c 6C309FE5 		ldr	r3, .L4+64
 1935 0120 0020A0E3 		mov	r2, #0
 1936 0124 0020C3E5 		strb	r2, [r3, #0]
  49:../rtc.c      **** 
  50:../rtc.c      ****     rRTCCON &= ~1;
 1937              		.loc 1 50 0
 1938 0128 2C309FE5 		ldr	r3, .L4+12
 1939 012c 28209FE5 		ldr	r2, .L4+12
 1940 0130 0020D2E5 		ldrb	r2, [r2, #0]
 1941 0134 FF2002E2 		and	r2, r2, #255
 1942 0138 0120C2E3 		bic	r2, r2, #1
 1943 013c FF2002E2 		and	r2, r2, #255
 1944 0140 0020C3E5 		strb	r2, [r3, #0]
  51:../rtc.c      **** }
 1945              		.loc 1 51 0
 1946 0144 0CD04BE2 		sub	sp, fp, #12
 1947 0148 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1948 014c 1EFF2FE1 		bx	lr
 1949              	.L5:
 1950              		.align	2
 1951              	.L4:
 1952 0150 8C00D701 		.word	30867596
 1953 0154 5000D701 		.word	30867536
 1954 0158 6C00D701 		.word	30867564
 1955 015c 4000D701 		.word	30867520
 1956 0160 8800D701 		.word	30867592
 1957 0164 8400D701 		.word	30867588
 1958 0168 7C00D701 		.word	30867580
 1959 016c 8000D701 		.word	30867584
 1960 0170 7800D701 		.word	30867576
 1961 0174 7400D701 		.word	30867572
 1962 0178 7000D701 		.word	30867568
 1963 017c 6800D701 		.word	30867560
 1964 0180 6400D701 		.word	30867556
 1965 0184 6000D701 		.word	30867552
 1966 0188 5C00D701 		.word	30867548
 1967 018c 5800D701 		.word	30867544
 1968 0190 5400D701 		.word	30867540
 1969              		.cfi_endproc
 1970              	.LFE2:
 1972              		.align	2
 1973              		.global	rtc_puttime
 1975              	rtc_puttime:
 1976              	.LFB3:
  52:../rtc.c      **** 
  53:../rtc.c      **** void rtc_puttime( rtc_time_t *rtc_time )
  54:../rtc.c      **** {
 1977              		.loc 1 54 0
 1978              		.cfi_startproc
 1979              		@ Function supports interworking.
 1980              		@ args = 0, pretend = 0, frame = 8
 1981              		@ frame_needed = 1, uses_anonymous_args = 0
 1982 0194 0DC0A0E1 		mov	ip, sp
 1983              	.LCFI6:
 1984              		.cfi_def_cfa_register 12
 1985 0198 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1986 019c 04B04CE2 		sub	fp, ip, #4
 1987              		.cfi_offset 14, -8
 1988              		.cfi_offset 13, -12
 1989              		.cfi_offset 11, -16
 1990              	.LCFI7:
 1991              		.cfi_def_cfa 11, 4
 1992 01a0 08D04DE2 		sub	sp, sp, #8
 1993 01a4 10000BE5 		str	r0, [fp, #-16]
  55:../rtc.c      **** 	//Set RTCEN=RTCCON[0] = 1
  56:../rtc.c      ****     rRTCCON |= 1;
 1994              		.loc 1 56 0
 1995 01a8 94339FE5 		ldr	r3, .L7
 1996 01ac 90239FE5 		ldr	r2, .L7
 1997 01b0 0020D2E5 		ldrb	r2, [r2, #0]
 1998 01b4 FF2002E2 		and	r2, r2, #255
 1999 01b8 012082E3 		orr	r2, r2, #1
 2000 01bc FF2002E2 		and	r2, r2, #255
 2001 01c0 0020C3E5 		strb	r2, [r3, #0]
  57:../rtc.c      **** 
  58:../rtc.c      ****     rBCDYEAR = ((rtc_time->year / 10) % 10) << 4 | (rtc_time->year % 10);
 2002              		.loc 1 58 0
 2003 01c4 7C039FE5 		ldr	r0, .L7+4
 2004 01c8 10301BE5 		ldr	r3, [fp, #-16]
 2005 01cc 0620D3E5 		ldrb	r2, [r3, #6]	@ zero_extendqisi2
 2006 01d0 74339FE5 		ldr	r3, .L7+8
 2007 01d4 921383E0 		umull	r1, r3, r2, r3
 2008 01d8 A331A0E1 		mov	r3, r3, lsr #3
 2009 01dc FF2003E2 		and	r2, r3, #255
 2010 01e0 64339FE5 		ldr	r3, .L7+8
 2011 01e4 921383E0 		umull	r1, r3, r2, r3
 2012 01e8 A311A0E1 		mov	r1, r3, lsr #3
 2013 01ec 0130A0E1 		mov	r3, r1
 2014 01f0 0331A0E1 		mov	r3, r3, asl #2
 2015 01f4 013083E0 		add	r3, r3, r1
 2016 01f8 8330A0E1 		mov	r3, r3, asl #1
 2017 01fc 023063E0 		rsb	r3, r3, r2
 2018 0200 FF3003E2 		and	r3, r3, #255
 2019 0204 0332A0E1 		mov	r3, r3, asl #4
 2020 0208 FFC003E2 		and	ip, r3, #255
 2021 020c 10301BE5 		ldr	r3, [fp, #-16]
 2022 0210 0620D3E5 		ldrb	r2, [r3, #6]	@ zero_extendqisi2
 2023 0214 30339FE5 		ldr	r3, .L7+8
 2024 0218 921383E0 		umull	r1, r3, r2, r3
 2025 021c A311A0E1 		mov	r1, r3, lsr #3
 2026 0220 0130A0E1 		mov	r3, r1
 2027 0224 0331A0E1 		mov	r3, r3, asl #2
 2028 0228 013083E0 		add	r3, r3, r1
 2029 022c 8330A0E1 		mov	r3, r3, asl #1
 2030 0230 023063E0 		rsb	r3, r3, r2
 2031 0234 FF3003E2 		and	r3, r3, #255
 2032 0238 FF3003E2 		and	r3, r3, #255
 2033 023c 0C20A0E1 		mov	r2, ip
 2034 0240 033082E1 		orr	r3, r2, r3
 2035 0244 FF3003E2 		and	r3, r3, #255
 2036 0248 FF3003E2 		and	r3, r3, #255
 2037 024c 0030C0E5 		strb	r3, [r0, #0]
  59:../rtc.c      ****     rBCDMON  = ((rtc_time->mon / 10) % 10) << 4 | (rtc_time->mon % 10);
 2038              		.loc 1 59 0
 2039 0250 F8029FE5 		ldr	r0, .L7+12
 2040 0254 10301BE5 		ldr	r3, [fp, #-16]
 2041 0258 0520D3E5 		ldrb	r2, [r3, #5]	@ zero_extendqisi2
 2042 025c E8329FE5 		ldr	r3, .L7+8
 2043 0260 921383E0 		umull	r1, r3, r2, r3
 2044 0264 A331A0E1 		mov	r3, r3, lsr #3
 2045 0268 FF2003E2 		and	r2, r3, #255
 2046 026c D8329FE5 		ldr	r3, .L7+8
 2047 0270 921383E0 		umull	r1, r3, r2, r3
 2048 0274 A311A0E1 		mov	r1, r3, lsr #3
 2049 0278 0130A0E1 		mov	r3, r1
 2050 027c 0331A0E1 		mov	r3, r3, asl #2
 2051 0280 013083E0 		add	r3, r3, r1
 2052 0284 8330A0E1 		mov	r3, r3, asl #1
 2053 0288 023063E0 		rsb	r3, r3, r2
 2054 028c FF3003E2 		and	r3, r3, #255
 2055 0290 0332A0E1 		mov	r3, r3, asl #4
 2056 0294 FFC003E2 		and	ip, r3, #255
 2057 0298 10301BE5 		ldr	r3, [fp, #-16]
 2058 029c 0520D3E5 		ldrb	r2, [r3, #5]	@ zero_extendqisi2
 2059 02a0 A4329FE5 		ldr	r3, .L7+8
 2060 02a4 921383E0 		umull	r1, r3, r2, r3
 2061 02a8 A311A0E1 		mov	r1, r3, lsr #3
 2062 02ac 0130A0E1 		mov	r3, r1
 2063 02b0 0331A0E1 		mov	r3, r3, asl #2
 2064 02b4 013083E0 		add	r3, r3, r1
 2065 02b8 8330A0E1 		mov	r3, r3, asl #1
 2066 02bc 023063E0 		rsb	r3, r3, r2
 2067 02c0 FF3003E2 		and	r3, r3, #255
 2068 02c4 FF3003E2 		and	r3, r3, #255
 2069 02c8 0C20A0E1 		mov	r2, ip
 2070 02cc 033082E1 		orr	r3, r2, r3
 2071 02d0 FF3003E2 		and	r3, r3, #255
 2072 02d4 FF3003E2 		and	r3, r3, #255
 2073 02d8 0030C0E5 		strb	r3, [r0, #0]
  60:../rtc.c      ****     rBCDDAY  = ((rtc_time->mday / 10) % 10) << 4 | (rtc_time->mday % 10);
 2074              		.loc 1 60 0
 2075 02dc 70029FE5 		ldr	r0, .L7+16
 2076 02e0 10301BE5 		ldr	r3, [fp, #-16]
 2077 02e4 0320D3E5 		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 2078 02e8 5C329FE5 		ldr	r3, .L7+8
 2079 02ec 921383E0 		umull	r1, r3, r2, r3
 2080 02f0 A331A0E1 		mov	r3, r3, lsr #3
 2081 02f4 FF2003E2 		and	r2, r3, #255
 2082 02f8 4C329FE5 		ldr	r3, .L7+8
 2083 02fc 921383E0 		umull	r1, r3, r2, r3
 2084 0300 A311A0E1 		mov	r1, r3, lsr #3
 2085 0304 0130A0E1 		mov	r3, r1
 2086 0308 0331A0E1 		mov	r3, r3, asl #2
 2087 030c 013083E0 		add	r3, r3, r1
 2088 0310 8330A0E1 		mov	r3, r3, asl #1
 2089 0314 023063E0 		rsb	r3, r3, r2
 2090 0318 FF3003E2 		and	r3, r3, #255
 2091 031c 0332A0E1 		mov	r3, r3, asl #4
 2092 0320 FFC003E2 		and	ip, r3, #255
 2093 0324 10301BE5 		ldr	r3, [fp, #-16]
 2094 0328 0320D3E5 		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 2095 032c 18329FE5 		ldr	r3, .L7+8
 2096 0330 921383E0 		umull	r1, r3, r2, r3
 2097 0334 A311A0E1 		mov	r1, r3, lsr #3
 2098 0338 0130A0E1 		mov	r3, r1
 2099 033c 0331A0E1 		mov	r3, r3, asl #2
 2100 0340 013083E0 		add	r3, r3, r1
 2101 0344 8330A0E1 		mov	r3, r3, asl #1
 2102 0348 023063E0 		rsb	r3, r3, r2
 2103 034c FF3003E2 		and	r3, r3, #255
 2104 0350 FF3003E2 		and	r3, r3, #255
 2105 0354 0C20A0E1 		mov	r2, ip
 2106 0358 033082E1 		orr	r3, r2, r3
 2107 035c FF3003E2 		and	r3, r3, #255
 2108 0360 FF3003E2 		and	r3, r3, #255
 2109 0364 0030C0E5 		strb	r3, [r0, #0]
  61:../rtc.c      ****     rBCDDATE = rtc_time->wday;
 2110              		.loc 1 61 0
 2111 0368 E8319FE5 		ldr	r3, .L7+20
 2112 036c 10201BE5 		ldr	r2, [fp, #-16]
 2113 0370 0420D2E5 		ldrb	r2, [r2, #4]	@ zero_extendqisi2
 2114 0374 0020C3E5 		strb	r2, [r3, #0]
  62:../rtc.c      ****     rBCDHOUR = ((rtc_time->hour / 10) % 10) << 4 | (rtc_time->hour % 10);
 2115              		.loc 1 62 0
 2116 0378 DC019FE5 		ldr	r0, .L7+24
 2117 037c 10301BE5 		ldr	r3, [fp, #-16]
 2118 0380 0220D3E5 		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 2119 0384 C0319FE5 		ldr	r3, .L7+8
 2120 0388 921383E0 		umull	r1, r3, r2, r3
 2121 038c A331A0E1 		mov	r3, r3, lsr #3
 2122 0390 FF2003E2 		and	r2, r3, #255
 2123 0394 B0319FE5 		ldr	r3, .L7+8
 2124 0398 921383E0 		umull	r1, r3, r2, r3
 2125 039c A311A0E1 		mov	r1, r3, lsr #3
 2126 03a0 0130A0E1 		mov	r3, r1
 2127 03a4 0331A0E1 		mov	r3, r3, asl #2
 2128 03a8 013083E0 		add	r3, r3, r1
 2129 03ac 8330A0E1 		mov	r3, r3, asl #1
 2130 03b0 023063E0 		rsb	r3, r3, r2
 2131 03b4 FF3003E2 		and	r3, r3, #255
 2132 03b8 0332A0E1 		mov	r3, r3, asl #4
 2133 03bc FFC003E2 		and	ip, r3, #255
 2134 03c0 10301BE5 		ldr	r3, [fp, #-16]
 2135 03c4 0220D3E5 		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 2136 03c8 7C319FE5 		ldr	r3, .L7+8
 2137 03cc 921383E0 		umull	r1, r3, r2, r3
 2138 03d0 A311A0E1 		mov	r1, r3, lsr #3
 2139 03d4 0130A0E1 		mov	r3, r1
 2140 03d8 0331A0E1 		mov	r3, r3, asl #2
 2141 03dc 013083E0 		add	r3, r3, r1
 2142 03e0 8330A0E1 		mov	r3, r3, asl #1
 2143 03e4 023063E0 		rsb	r3, r3, r2
 2144 03e8 FF3003E2 		and	r3, r3, #255
 2145 03ec FF3003E2 		and	r3, r3, #255
 2146 03f0 0C20A0E1 		mov	r2, ip
 2147 03f4 033082E1 		orr	r3, r2, r3
 2148 03f8 FF3003E2 		and	r3, r3, #255
 2149 03fc FF3003E2 		and	r3, r3, #255
 2150 0400 0030C0E5 		strb	r3, [r0, #0]
  63:../rtc.c      ****     rBCDMIN  = ((rtc_time->min / 10) % 10) << 4 | (rtc_time->min % 10);
 2151              		.loc 1 63 0
 2152 0404 54019FE5 		ldr	r0, .L7+28
 2153 0408 10301BE5 		ldr	r3, [fp, #-16]
 2154 040c 0120D3E5 		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 2155 0410 34319FE5 		ldr	r3, .L7+8
 2156 0414 921383E0 		umull	r1, r3, r2, r3
 2157 0418 A331A0E1 		mov	r3, r3, lsr #3
 2158 041c FF2003E2 		and	r2, r3, #255
 2159 0420 24319FE5 		ldr	r3, .L7+8
 2160 0424 921383E0 		umull	r1, r3, r2, r3
 2161 0428 A311A0E1 		mov	r1, r3, lsr #3
 2162 042c 0130A0E1 		mov	r3, r1
 2163 0430 0331A0E1 		mov	r3, r3, asl #2
 2164 0434 013083E0 		add	r3, r3, r1
 2165 0438 8330A0E1 		mov	r3, r3, asl #1
 2166 043c 023063E0 		rsb	r3, r3, r2
 2167 0440 FF3003E2 		and	r3, r3, #255
 2168 0444 0332A0E1 		mov	r3, r3, asl #4
 2169 0448 FFC003E2 		and	ip, r3, #255
 2170 044c 10301BE5 		ldr	r3, [fp, #-16]
 2171 0450 0120D3E5 		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 2172 0454 F0309FE5 		ldr	r3, .L7+8
 2173 0458 921383E0 		umull	r1, r3, r2, r3
 2174 045c A311A0E1 		mov	r1, r3, lsr #3
 2175 0460 0130A0E1 		mov	r3, r1
 2176 0464 0331A0E1 		mov	r3, r3, asl #2
 2177 0468 013083E0 		add	r3, r3, r1
 2178 046c 8330A0E1 		mov	r3, r3, asl #1
 2179 0470 023063E0 		rsb	r3, r3, r2
 2180 0474 FF3003E2 		and	r3, r3, #255
 2181 0478 FF3003E2 		and	r3, r3, #255
 2182 047c 0C20A0E1 		mov	r2, ip
 2183 0480 033082E1 		orr	r3, r2, r3
 2184 0484 FF3003E2 		and	r3, r3, #255
 2185 0488 FF3003E2 		and	r3, r3, #255
 2186 048c 0030C0E5 		strb	r3, [r0, #0]
  64:../rtc.c      ****     rBCDSEC  = ((rtc_time->sec / 10) % 10) << 4 | (rtc_time->sec % 10);
 2187              		.loc 1 64 0
 2188 0490 CC009FE5 		ldr	r0, .L7+32
 2189 0494 10301BE5 		ldr	r3, [fp, #-16]
 2190 0498 0020D3E5 		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 2191 049c A8309FE5 		ldr	r3, .L7+8
 2192 04a0 921383E0 		umull	r1, r3, r2, r3
 2193 04a4 A331A0E1 		mov	r3, r3, lsr #3
 2194 04a8 FF2003E2 		and	r2, r3, #255
 2195 04ac 98309FE5 		ldr	r3, .L7+8
 2196 04b0 921383E0 		umull	r1, r3, r2, r3
 2197 04b4 A311A0E1 		mov	r1, r3, lsr #3
 2198 04b8 0130A0E1 		mov	r3, r1
 2199 04bc 0331A0E1 		mov	r3, r3, asl #2
 2200 04c0 013083E0 		add	r3, r3, r1
 2201 04c4 8330A0E1 		mov	r3, r3, asl #1
 2202 04c8 023063E0 		rsb	r3, r3, r2
 2203 04cc FF3003E2 		and	r3, r3, #255
 2204 04d0 0332A0E1 		mov	r3, r3, asl #4
 2205 04d4 FFC003E2 		and	ip, r3, #255
 2206 04d8 10301BE5 		ldr	r3, [fp, #-16]
 2207 04dc 0020D3E5 		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 2208 04e0 64309FE5 		ldr	r3, .L7+8
 2209 04e4 921383E0 		umull	r1, r3, r2, r3
 2210 04e8 A311A0E1 		mov	r1, r3, lsr #3
 2211 04ec 0130A0E1 		mov	r3, r1
 2212 04f0 0331A0E1 		mov	r3, r3, asl #2
 2213 04f4 013083E0 		add	r3, r3, r1
 2214 04f8 8330A0E1 		mov	r3, r3, asl #1
 2215 04fc 023063E0 		rsb	r3, r3, r2
 2216 0500 FF3003E2 		and	r3, r3, #255
 2217 0504 FF3003E2 		and	r3, r3, #255
 2218 0508 0C20A0E1 		mov	r2, ip
 2219 050c 033082E1 		orr	r3, r2, r3
 2220 0510 FF3003E2 		and	r3, r3, #255
 2221 0514 FF3003E2 		and	r3, r3, #255
 2222 0518 0030C0E5 		strb	r3, [r0, #0]
  65:../rtc.c      **** 
  66:../rtc.c      **** 	//Set RTCEN=RTCCON[0] = 0
  67:../rtc.c      ****     rRTCCON &= ~1;
 2223              		.loc 1 67 0
 2224 051c 20309FE5 		ldr	r3, .L7
 2225 0520 1C209FE5 		ldr	r2, .L7
 2226 0524 0020D2E5 		ldrb	r2, [r2, #0]
 2227 0528 FF2002E2 		and	r2, r2, #255
 2228 052c 0120C2E3 		bic	r2, r2, #1
 2229 0530 FF2002E2 		and	r2, r2, #255
 2230 0534 0020C3E5 		strb	r2, [r3, #0]
  68:../rtc.c      **** }
 2231              		.loc 1 68 0
 2232 0538 0CD04BE2 		sub	sp, fp, #12
 2233 053c 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2234 0540 1EFF2FE1 		bx	lr
 2235              	.L8:
 2236              		.align	2
 2237              	.L7:
 2238 0544 4000D701 		.word	30867520
 2239 0548 8800D701 		.word	30867592
 2240 054c CDCCCCCC 		.word	-858993459
 2241 0550 8400D701 		.word	30867588
 2242 0554 7C00D701 		.word	30867580
 2243 0558 8000D701 		.word	30867584
 2244 055c 7800D701 		.word	30867576
 2245 0560 7400D701 		.word	30867572
 2246 0564 7000D701 		.word	30867568
 2247              		.cfi_endproc
 2248              	.LFE3:
 2250              		.align	2
 2251              		.global	rtc_gettime
 2253              	rtc_gettime:
 2254              	.LFB4:
  69:../rtc.c      **** 
  70:../rtc.c      **** void rtc_gettime( rtc_time_t *rtc_time )
  71:../rtc.c      **** {
 2255              		.loc 1 71 0
 2256              		.cfi_startproc
 2257              		@ Function supports interworking.
 2258              		@ args = 0, pretend = 0, frame = 8
 2259              		@ frame_needed = 1, uses_anonymous_args = 0
 2260 0568 0DC0A0E1 		mov	ip, sp
 2261              	.LCFI8:
 2262              		.cfi_def_cfa_register 12
 2263 056c 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2264 0570 04B04CE2 		sub	fp, ip, #4
 2265              		.cfi_offset 14, -8
 2266              		.cfi_offset 13, -12
 2267              		.cfi_offset 11, -16
 2268              	.LCFI9:
 2269              		.cfi_def_cfa 11, 4
 2270 0574 08D04DE2 		sub	sp, sp, #8
 2271 0578 10000BE5 		str	r0, [fp, #-16]
  72:../rtc.c      **** 	//Set RTCEN=RTCCON[0] = 1
  73:../rtc.c      ****     rRTCCON |= 1;
 2272              		.loc 1 73 0
 2273 057c 04349FE5 		ldr	r3, .L11
 2274 0580 00249FE5 		ldr	r2, .L11
 2275 0584 0020D2E5 		ldrb	r2, [r2, #0]
 2276 0588 FF2002E2 		and	r2, r2, #255
 2277 058c 012082E3 		orr	r2, r2, #1
 2278 0590 FF2002E2 		and	r2, r2, #255
 2279 0594 0020C3E5 		strb	r2, [r3, #0]
  74:../rtc.c      **** 
  75:../rtc.c      ****     rtc_time->year = (rBCDYEAR & 0b1111) + 10 * (rBCDYEAR >> 4);
 2280              		.loc 1 75 0
 2281 0598 EC339FE5 		ldr	r3, .L11+4
 2282 059c 0030D3E5 		ldrb	r3, [r3, #0]
 2283 05a0 FF3003E2 		and	r3, r3, #255
 2284 05a4 0F3003E2 		and	r3, r3, #15
 2285 05a8 FF2003E2 		and	r2, r3, #255
 2286 05ac D8339FE5 		ldr	r3, .L11+4
 2287 05b0 0030D3E5 		ldrb	r3, [r3, #0]
 2288 05b4 FF3003E2 		and	r3, r3, #255
 2289 05b8 2332A0E1 		mov	r3, r3, lsr #4
 2290 05bc FF3003E2 		and	r3, r3, #255
 2291 05c0 0310A0E1 		mov	r1, r3
 2292 05c4 0111A0E1 		mov	r1, r1, asl #2
 2293 05c8 033081E0 		add	r3, r1, r3
 2294 05cc 8330A0E1 		mov	r3, r3, asl #1
 2295 05d0 FF3003E2 		and	r3, r3, #255
 2296 05d4 033082E0 		add	r3, r2, r3
 2297 05d8 FF2003E2 		and	r2, r3, #255
 2298 05dc 10301BE5 		ldr	r3, [fp, #-16]
 2299 05e0 0620C3E5 		strb	r2, [r3, #6]
  76:../rtc.c      ****     rtc_time->mon  = (rBCDMON & 0b1111) + 10 * (rBCDMON >> 4);
 2300              		.loc 1 76 0
 2301 05e4 A4339FE5 		ldr	r3, .L11+8
 2302 05e8 0030D3E5 		ldrb	r3, [r3, #0]
 2303 05ec FF3003E2 		and	r3, r3, #255
 2304 05f0 0F3003E2 		and	r3, r3, #15
 2305 05f4 FF2003E2 		and	r2, r3, #255
 2306 05f8 90339FE5 		ldr	r3, .L11+8
 2307 05fc 0030D3E5 		ldrb	r3, [r3, #0]
 2308 0600 FF3003E2 		and	r3, r3, #255
 2309 0604 2332A0E1 		mov	r3, r3, lsr #4
 2310 0608 FF3003E2 		and	r3, r3, #255
 2311 060c 0310A0E1 		mov	r1, r3
 2312 0610 0111A0E1 		mov	r1, r1, asl #2
 2313 0614 033081E0 		add	r3, r1, r3
 2314 0618 8330A0E1 		mov	r3, r3, asl #1
 2315 061c FF3003E2 		and	r3, r3, #255
 2316 0620 033082E0 		add	r3, r2, r3
 2317 0624 FF2003E2 		and	r2, r3, #255
 2318 0628 10301BE5 		ldr	r3, [fp, #-16]
 2319 062c 0520C3E5 		strb	r2, [r3, #5]
  77:../rtc.c      ****     rtc_time->mday = (rBCDDAY & 0b1111) + 10 * (rBCDDAY >> 4);
 2320              		.loc 1 77 0
 2321 0630 5C339FE5 		ldr	r3, .L11+12
 2322 0634 0030D3E5 		ldrb	r3, [r3, #0]
 2323 0638 FF3003E2 		and	r3, r3, #255
 2324 063c 0F3003E2 		and	r3, r3, #15
 2325 0640 FF2003E2 		and	r2, r3, #255
 2326 0644 48339FE5 		ldr	r3, .L11+12
 2327 0648 0030D3E5 		ldrb	r3, [r3, #0]
 2328 064c FF3003E2 		and	r3, r3, #255
 2329 0650 2332A0E1 		mov	r3, r3, lsr #4
 2330 0654 FF3003E2 		and	r3, r3, #255
 2331 0658 0310A0E1 		mov	r1, r3
 2332 065c 0111A0E1 		mov	r1, r1, asl #2
 2333 0660 033081E0 		add	r3, r1, r3
 2334 0664 8330A0E1 		mov	r3, r3, asl #1
 2335 0668 FF3003E2 		and	r3, r3, #255
 2336 066c 033082E0 		add	r3, r2, r3
 2337 0670 FF2003E2 		and	r2, r3, #255
 2338 0674 10301BE5 		ldr	r3, [fp, #-16]
 2339 0678 0320C3E5 		strb	r2, [r3, #3]
  78:../rtc.c      ****     rtc_time->wday = rBCDDATE;
 2340              		.loc 1 78 0
 2341 067c 14339FE5 		ldr	r3, .L11+16
 2342 0680 0030D3E5 		ldrb	r3, [r3, #0]
 2343 0684 FF2003E2 		and	r2, r3, #255
 2344 0688 10301BE5 		ldr	r3, [fp, #-16]
 2345 068c 0420C3E5 		strb	r2, [r3, #4]
  79:../rtc.c      ****     rtc_time->hour = (rBCDHOUR & 0b1111) + 10 * (rBCDHOUR >> 4);
 2346              		.loc 1 79 0
 2347 0690 04339FE5 		ldr	r3, .L11+20
 2348 0694 0030D3E5 		ldrb	r3, [r3, #0]
 2349 0698 FF3003E2 		and	r3, r3, #255
 2350 069c 0F3003E2 		and	r3, r3, #15
 2351 06a0 FF2003E2 		and	r2, r3, #255
 2352 06a4 F0329FE5 		ldr	r3, .L11+20
 2353 06a8 0030D3E5 		ldrb	r3, [r3, #0]
 2354 06ac FF3003E2 		and	r3, r3, #255
 2355 06b0 2332A0E1 		mov	r3, r3, lsr #4
 2356 06b4 FF3003E2 		and	r3, r3, #255
 2357 06b8 0310A0E1 		mov	r1, r3
 2358 06bc 0111A0E1 		mov	r1, r1, asl #2
 2359 06c0 033081E0 		add	r3, r1, r3
 2360 06c4 8330A0E1 		mov	r3, r3, asl #1
 2361 06c8 FF3003E2 		and	r3, r3, #255
 2362 06cc 033082E0 		add	r3, r2, r3
 2363 06d0 FF2003E2 		and	r2, r3, #255
 2364 06d4 10301BE5 		ldr	r3, [fp, #-16]
 2365 06d8 0220C3E5 		strb	r2, [r3, #2]
  80:../rtc.c      ****     rtc_time->min  = (rBCDMIN & 0b1111) + 10 * (rBCDMIN >> 4);
 2366              		.loc 1 80 0
 2367 06dc BC329FE5 		ldr	r3, .L11+24
 2368 06e0 0030D3E5 		ldrb	r3, [r3, #0]
 2369 06e4 FF3003E2 		and	r3, r3, #255
 2370 06e8 0F3003E2 		and	r3, r3, #15
 2371 06ec FF2003E2 		and	r2, r3, #255
 2372 06f0 A8329FE5 		ldr	r3, .L11+24
 2373 06f4 0030D3E5 		ldrb	r3, [r3, #0]
 2374 06f8 FF3003E2 		and	r3, r3, #255
 2375 06fc 2332A0E1 		mov	r3, r3, lsr #4
 2376 0700 FF3003E2 		and	r3, r3, #255
 2377 0704 0310A0E1 		mov	r1, r3
 2378 0708 0111A0E1 		mov	r1, r1, asl #2
 2379 070c 033081E0 		add	r3, r1, r3
 2380 0710 8330A0E1 		mov	r3, r3, asl #1
 2381 0714 FF3003E2 		and	r3, r3, #255
 2382 0718 033082E0 		add	r3, r2, r3
 2383 071c FF2003E2 		and	r2, r3, #255
 2384 0720 10301BE5 		ldr	r3, [fp, #-16]
 2385 0724 0120C3E5 		strb	r2, [r3, #1]
  81:../rtc.c      ****     rtc_time->sec  = (rBCDSEC & 0b1111) + 10 * (rBCDSEC >> 4);
 2386              		.loc 1 81 0
 2387 0728 74329FE5 		ldr	r3, .L11+28
 2388 072c 0030D3E5 		ldrb	r3, [r3, #0]
 2389 0730 FF3003E2 		and	r3, r3, #255
 2390 0734 0F3003E2 		and	r3, r3, #15
 2391 0738 FF2003E2 		and	r2, r3, #255
 2392 073c 60329FE5 		ldr	r3, .L11+28
 2393 0740 0030D3E5 		ldrb	r3, [r3, #0]
 2394 0744 FF3003E2 		and	r3, r3, #255
 2395 0748 2332A0E1 		mov	r3, r3, lsr #4
 2396 074c FF3003E2 		and	r3, r3, #255
 2397 0750 0310A0E1 		mov	r1, r3
 2398 0754 0111A0E1 		mov	r1, r1, asl #2
 2399 0758 033081E0 		add	r3, r1, r3
 2400 075c 8330A0E1 		mov	r3, r3, asl #1
 2401 0760 FF3003E2 		and	r3, r3, #255
 2402 0764 033082E0 		add	r3, r2, r3
 2403 0768 FF2003E2 		and	r2, r3, #255
 2404 076c 10301BE5 		ldr	r3, [fp, #-16]
 2405 0770 0020C3E5 		strb	r2, [r3, #0]
  82:../rtc.c      ****     if( ! rtc_time->sec ){
 2406              		.loc 1 82 0
 2407 0774 10301BE5 		ldr	r3, [fp, #-16]
 2408 0778 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2409 077c 000053E3 		cmp	r3, #0
 2410 0780 7600001A 		bne	.L10
  83:../rtc.c      ****     	//Reread, a second may have elapsed so date is invalid
  84:../rtc.c      ****         rtc_time->year = (rBCDYEAR & 0b1111) + 10 * (rBCDYEAR >> 4);
 2411              		.loc 1 84 0
 2412 0784 00329FE5 		ldr	r3, .L11+4
 2413 0788 0030D3E5 		ldrb	r3, [r3, #0]
 2414 078c FF3003E2 		and	r3, r3, #255
 2415 0790 0F3003E2 		and	r3, r3, #15
 2416 0794 FF2003E2 		and	r2, r3, #255
 2417 0798 EC319FE5 		ldr	r3, .L11+4
 2418 079c 0030D3E5 		ldrb	r3, [r3, #0]
 2419 07a0 FF3003E2 		and	r3, r3, #255
 2420 07a4 2332A0E1 		mov	r3, r3, lsr #4
 2421 07a8 FF3003E2 		and	r3, r3, #255
 2422 07ac 0310A0E1 		mov	r1, r3
 2423 07b0 0111A0E1 		mov	r1, r1, asl #2
 2424 07b4 033081E0 		add	r3, r1, r3
 2425 07b8 8330A0E1 		mov	r3, r3, asl #1
 2426 07bc FF3003E2 		and	r3, r3, #255
 2427 07c0 033082E0 		add	r3, r2, r3
 2428 07c4 FF2003E2 		and	r2, r3, #255
 2429 07c8 10301BE5 		ldr	r3, [fp, #-16]
 2430 07cc 0620C3E5 		strb	r2, [r3, #6]
  85:../rtc.c      ****         rtc_time->mon  = (rBCDMON & 0b1111) + 10 * (rBCDMON >> 4);
 2431              		.loc 1 85 0
 2432 07d0 B8319FE5 		ldr	r3, .L11+8
 2433 07d4 0030D3E5 		ldrb	r3, [r3, #0]
 2434 07d8 FF3003E2 		and	r3, r3, #255
 2435 07dc 0F3003E2 		and	r3, r3, #15
 2436 07e0 FF2003E2 		and	r2, r3, #255
 2437 07e4 A4319FE5 		ldr	r3, .L11+8
 2438 07e8 0030D3E5 		ldrb	r3, [r3, #0]
 2439 07ec FF3003E2 		and	r3, r3, #255
 2440 07f0 2332A0E1 		mov	r3, r3, lsr #4
 2441 07f4 FF3003E2 		and	r3, r3, #255
 2442 07f8 0310A0E1 		mov	r1, r3
 2443 07fc 0111A0E1 		mov	r1, r1, asl #2
 2444 0800 033081E0 		add	r3, r1, r3
 2445 0804 8330A0E1 		mov	r3, r3, asl #1
 2446 0808 FF3003E2 		and	r3, r3, #255
 2447 080c 033082E0 		add	r3, r2, r3
 2448 0810 FF2003E2 		and	r2, r3, #255
 2449 0814 10301BE5 		ldr	r3, [fp, #-16]
 2450 0818 0520C3E5 		strb	r2, [r3, #5]
  86:../rtc.c      ****         rtc_time->mday = (rBCDDAY & 0b1111) + 10 * (rBCDDAY >> 4);
 2451              		.loc 1 86 0
 2452 081c 70319FE5 		ldr	r3, .L11+12
 2453 0820 0030D3E5 		ldrb	r3, [r3, #0]
 2454 0824 FF3003E2 		and	r3, r3, #255
 2455 0828 0F3003E2 		and	r3, r3, #15
 2456 082c FF2003E2 		and	r2, r3, #255
 2457 0830 5C319FE5 		ldr	r3, .L11+12
 2458 0834 0030D3E5 		ldrb	r3, [r3, #0]
 2459 0838 FF3003E2 		and	r3, r3, #255
 2460 083c 2332A0E1 		mov	r3, r3, lsr #4
 2461 0840 FF3003E2 		and	r3, r3, #255
 2462 0844 0310A0E1 		mov	r1, r3
 2463 0848 0111A0E1 		mov	r1, r1, asl #2
 2464 084c 033081E0 		add	r3, r1, r3
 2465 0850 8330A0E1 		mov	r3, r3, asl #1
 2466 0854 FF3003E2 		and	r3, r3, #255
 2467 0858 033082E0 		add	r3, r2, r3
 2468 085c FF2003E2 		and	r2, r3, #255
 2469 0860 10301BE5 		ldr	r3, [fp, #-16]
 2470 0864 0320C3E5 		strb	r2, [r3, #3]
  87:../rtc.c      ****         rtc_time->wday = rBCDDATE;
 2471              		.loc 1 87 0
 2472 0868 28319FE5 		ldr	r3, .L11+16
 2473 086c 0030D3E5 		ldrb	r3, [r3, #0]
 2474 0870 FF2003E2 		and	r2, r3, #255
 2475 0874 10301BE5 		ldr	r3, [fp, #-16]
 2476 0878 0420C3E5 		strb	r2, [r3, #4]
  88:../rtc.c      ****         rtc_time->hour = (rBCDHOUR & 0b1111) + 10 * (rBCDHOUR >> 4);
 2477              		.loc 1 88 0
 2478 087c 18319FE5 		ldr	r3, .L11+20
 2479 0880 0030D3E5 		ldrb	r3, [r3, #0]
 2480 0884 FF3003E2 		and	r3, r3, #255
 2481 0888 0F3003E2 		and	r3, r3, #15
 2482 088c FF2003E2 		and	r2, r3, #255
 2483 0890 04319FE5 		ldr	r3, .L11+20
 2484 0894 0030D3E5 		ldrb	r3, [r3, #0]
 2485 0898 FF3003E2 		and	r3, r3, #255
 2486 089c 2332A0E1 		mov	r3, r3, lsr #4
 2487 08a0 FF3003E2 		and	r3, r3, #255
 2488 08a4 0310A0E1 		mov	r1, r3
 2489 08a8 0111A0E1 		mov	r1, r1, asl #2
 2490 08ac 033081E0 		add	r3, r1, r3
 2491 08b0 8330A0E1 		mov	r3, r3, asl #1
 2492 08b4 FF3003E2 		and	r3, r3, #255
 2493 08b8 033082E0 		add	r3, r2, r3
 2494 08bc FF2003E2 		and	r2, r3, #255
 2495 08c0 10301BE5 		ldr	r3, [fp, #-16]
 2496 08c4 0220C3E5 		strb	r2, [r3, #2]
  89:../rtc.c      ****         rtc_time->min  = (rBCDMIN & 0b1111) + 10 * (rBCDMIN >> 4);
 2497              		.loc 1 89 0
 2498 08c8 D0309FE5 		ldr	r3, .L11+24
 2499 08cc 0030D3E5 		ldrb	r3, [r3, #0]
 2500 08d0 FF3003E2 		and	r3, r3, #255
 2501 08d4 0F3003E2 		and	r3, r3, #15
 2502 08d8 FF2003E2 		and	r2, r3, #255
 2503 08dc BC309FE5 		ldr	r3, .L11+24
 2504 08e0 0030D3E5 		ldrb	r3, [r3, #0]
 2505 08e4 FF3003E2 		and	r3, r3, #255
 2506 08e8 2332A0E1 		mov	r3, r3, lsr #4
 2507 08ec FF3003E2 		and	r3, r3, #255
 2508 08f0 0310A0E1 		mov	r1, r3
 2509 08f4 0111A0E1 		mov	r1, r1, asl #2
 2510 08f8 033081E0 		add	r3, r1, r3
 2511 08fc 8330A0E1 		mov	r3, r3, asl #1
 2512 0900 FF3003E2 		and	r3, r3, #255
 2513 0904 033082E0 		add	r3, r2, r3
 2514 0908 FF2003E2 		and	r2, r3, #255
 2515 090c 10301BE5 		ldr	r3, [fp, #-16]
 2516 0910 0120C3E5 		strb	r2, [r3, #1]
  90:../rtc.c      ****         rtc_time->sec  = (rBCDSEC & 0b1111) + 10 * (rBCDSEC >> 4);
 2517              		.loc 1 90 0
 2518 0914 88309FE5 		ldr	r3, .L11+28
 2519 0918 0030D3E5 		ldrb	r3, [r3, #0]
 2520 091c FF3003E2 		and	r3, r3, #255
 2521 0920 0F3003E2 		and	r3, r3, #15
 2522 0924 FF2003E2 		and	r2, r3, #255
 2523 0928 74309FE5 		ldr	r3, .L11+28
 2524 092c 0030D3E5 		ldrb	r3, [r3, #0]
 2525 0930 FF3003E2 		and	r3, r3, #255
 2526 0934 2332A0E1 		mov	r3, r3, lsr #4
 2527 0938 FF3003E2 		and	r3, r3, #255
 2528 093c 0310A0E1 		mov	r1, r3
 2529 0940 0111A0E1 		mov	r1, r1, asl #2
 2530 0944 033081E0 		add	r3, r1, r3
 2531 0948 8330A0E1 		mov	r3, r3, asl #1
 2532 094c FF3003E2 		and	r3, r3, #255
 2533 0950 033082E0 		add	r3, r2, r3
 2534 0954 FF2003E2 		and	r2, r3, #255
 2535 0958 10301BE5 		ldr	r3, [fp, #-16]
 2536 095c 0020C3E5 		strb	r2, [r3, #0]
 2537              	.L10:
  91:../rtc.c      ****     }
  92:../rtc.c      **** 
  93:../rtc.c      **** 	//Set RTCEN=RTCCON[0] = 0
  94:../rtc.c      ****     rRTCCON &= ~1;
 2538              		.loc 1 94 0
 2539 0960 20309FE5 		ldr	r3, .L11
 2540 0964 1C209FE5 		ldr	r2, .L11
 2541 0968 0020D2E5 		ldrb	r2, [r2, #0]
 2542 096c FF2002E2 		and	r2, r2, #255
 2543 0970 0120C2E3 		bic	r2, r2, #1
 2544 0974 FF2002E2 		and	r2, r2, #255
 2545 0978 0020C3E5 		strb	r2, [r3, #0]
  95:../rtc.c      **** }
 2546              		.loc 1 95 0
 2547 097c 0CD04BE2 		sub	sp, fp, #12
 2548 0980 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2549 0984 1EFF2FE1 		bx	lr
 2550              	.L12:
 2551              		.align	2
 2552              	.L11:
 2553 0988 4000D701 		.word	30867520
 2554 098c 8800D701 		.word	30867592
 2555 0990 8400D701 		.word	30867588
 2556 0994 7C00D701 		.word	30867580
 2557 0998 8000D701 		.word	30867584
 2558 099c 7800D701 		.word	30867576
 2559 09a0 7400D701 		.word	30867572
 2560 09a4 7000D701 		.word	30867568
 2561              		.cfi_endproc
 2562              	.LFE4:
 2564              		.align	2
 2565              		.global	rtc_set_alarm
 2567              	rtc_set_alarm:
 2568              	.LFB5:
  96:../rtc.c      **** 
  97:../rtc.c      **** void rtc_set_alarm( void(*isr)(void), rtc_time_t* rtc_time ) {
 2569              		.loc 1 97 0
 2570              		.cfi_startproc
 2571              		@ Function supports interworking.
 2572              		@ args = 0, pretend = 0, frame = 8
 2573              		@ frame_needed = 1, uses_anonymous_args = 0
 2574 09a8 0DC0A0E1 		mov	ip, sp
 2575              	.LCFI10:
 2576              		.cfi_def_cfa_register 12
 2577 09ac 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2578 09b0 04B04CE2 		sub	fp, ip, #4
 2579              		.cfi_offset 14, -8
 2580              		.cfi_offset 13, -12
 2581              		.cfi_offset 11, -16
 2582              	.LCFI11:
 2583              		.cfi_def_cfa 11, 4
 2584 09b4 08D04DE2 		sub	sp, sp, #8
 2585 09b8 10000BE5 		str	r0, [fp, #-16]
 2586 09bc 14100BE5 		str	r1, [fp, #-20]
  98:../rtc.c      **** 
  99:../rtc.c      **** 
 100:../rtc.c      ****     //Set alarm date
 101:../rtc.c      ****     rALMYEAR = ((rtc_time->year / 10) % 10) << 4 | (rtc_time->year % 10);
 2587              		.loc 1 101 0
 2588 09c0 80039FE5 		ldr	r0, .L14
 2589 09c4 14301BE5 		ldr	r3, [fp, #-20]
 2590 09c8 0620D3E5 		ldrb	r2, [r3, #6]	@ zero_extendqisi2
 2591 09cc 78339FE5 		ldr	r3, .L14+4
 2592 09d0 921383E0 		umull	r1, r3, r2, r3
 2593 09d4 A331A0E1 		mov	r3, r3, lsr #3
 2594 09d8 FF2003E2 		and	r2, r3, #255
 2595 09dc 68339FE5 		ldr	r3, .L14+4
 2596 09e0 921383E0 		umull	r1, r3, r2, r3
 2597 09e4 A311A0E1 		mov	r1, r3, lsr #3
 2598 09e8 0130A0E1 		mov	r3, r1
 2599 09ec 0331A0E1 		mov	r3, r3, asl #2
 2600 09f0 013083E0 		add	r3, r3, r1
 2601 09f4 8330A0E1 		mov	r3, r3, asl #1
 2602 09f8 023063E0 		rsb	r3, r3, r2
 2603 09fc FF3003E2 		and	r3, r3, #255
 2604 0a00 0332A0E1 		mov	r3, r3, asl #4
 2605 0a04 FFC003E2 		and	ip, r3, #255
 2606 0a08 14301BE5 		ldr	r3, [fp, #-20]
 2607 0a0c 0620D3E5 		ldrb	r2, [r3, #6]	@ zero_extendqisi2
 2608 0a10 34339FE5 		ldr	r3, .L14+4
 2609 0a14 921383E0 		umull	r1, r3, r2, r3
 2610 0a18 A311A0E1 		mov	r1, r3, lsr #3
 2611 0a1c 0130A0E1 		mov	r3, r1
 2612 0a20 0331A0E1 		mov	r3, r3, asl #2
 2613 0a24 013083E0 		add	r3, r3, r1
 2614 0a28 8330A0E1 		mov	r3, r3, asl #1
 2615 0a2c 023063E0 		rsb	r3, r3, r2
 2616 0a30 FF3003E2 		and	r3, r3, #255
 2617 0a34 FF3003E2 		and	r3, r3, #255
 2618 0a38 0C20A0E1 		mov	r2, ip
 2619 0a3c 033082E1 		orr	r3, r2, r3
 2620 0a40 FF3003E2 		and	r3, r3, #255
 2621 0a44 FF3003E2 		and	r3, r3, #255
 2622 0a48 0030C0E5 		strb	r3, [r0, #0]
 102:../rtc.c      ****     rALMMON  = ((rtc_time->mon / 10) % 10) << 4 | (rtc_time->mon % 10);
 2623              		.loc 1 102 0
 2624 0a4c FC029FE5 		ldr	r0, .L14+8
 2625 0a50 14301BE5 		ldr	r3, [fp, #-20]
 2626 0a54 0520D3E5 		ldrb	r2, [r3, #5]	@ zero_extendqisi2
 2627 0a58 EC329FE5 		ldr	r3, .L14+4
 2628 0a5c 921383E0 		umull	r1, r3, r2, r3
 2629 0a60 A331A0E1 		mov	r3, r3, lsr #3
 2630 0a64 FF2003E2 		and	r2, r3, #255
 2631 0a68 DC329FE5 		ldr	r3, .L14+4
 2632 0a6c 921383E0 		umull	r1, r3, r2, r3
 2633 0a70 A311A0E1 		mov	r1, r3, lsr #3
 2634 0a74 0130A0E1 		mov	r3, r1
 2635 0a78 0331A0E1 		mov	r3, r3, asl #2
 2636 0a7c 013083E0 		add	r3, r3, r1
 2637 0a80 8330A0E1 		mov	r3, r3, asl #1
 2638 0a84 023063E0 		rsb	r3, r3, r2
 2639 0a88 FF3003E2 		and	r3, r3, #255
 2640 0a8c 0332A0E1 		mov	r3, r3, asl #4
 2641 0a90 FFC003E2 		and	ip, r3, #255
 2642 0a94 14301BE5 		ldr	r3, [fp, #-20]
 2643 0a98 0520D3E5 		ldrb	r2, [r3, #5]	@ zero_extendqisi2
 2644 0a9c A8329FE5 		ldr	r3, .L14+4
 2645 0aa0 921383E0 		umull	r1, r3, r2, r3
 2646 0aa4 A311A0E1 		mov	r1, r3, lsr #3
 2647 0aa8 0130A0E1 		mov	r3, r1
 2648 0aac 0331A0E1 		mov	r3, r3, asl #2
 2649 0ab0 013083E0 		add	r3, r3, r1
 2650 0ab4 8330A0E1 		mov	r3, r3, asl #1
 2651 0ab8 023063E0 		rsb	r3, r3, r2
 2652 0abc FF3003E2 		and	r3, r3, #255
 2653 0ac0 FF3003E2 		and	r3, r3, #255
 2654 0ac4 0C20A0E1 		mov	r2, ip
 2655 0ac8 033082E1 		orr	r3, r2, r3
 2656 0acc FF3003E2 		and	r3, r3, #255
 2657 0ad0 FF3003E2 		and	r3, r3, #255
 2658 0ad4 0030C0E5 		strb	r3, [r0, #0]
 103:../rtc.c      ****     rALMDAY  = ((rtc_time->mday / 10) % 10) << 4 | (rtc_time->mday % 10);
 2659              		.loc 1 103 0
 2660 0ad8 74029FE5 		ldr	r0, .L14+12
 2661 0adc 14301BE5 		ldr	r3, [fp, #-20]
 2662 0ae0 0320D3E5 		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 2663 0ae4 60329FE5 		ldr	r3, .L14+4
 2664 0ae8 921383E0 		umull	r1, r3, r2, r3
 2665 0aec A331A0E1 		mov	r3, r3, lsr #3
 2666 0af0 FF2003E2 		and	r2, r3, #255
 2667 0af4 50329FE5 		ldr	r3, .L14+4
 2668 0af8 921383E0 		umull	r1, r3, r2, r3
 2669 0afc A311A0E1 		mov	r1, r3, lsr #3
 2670 0b00 0130A0E1 		mov	r3, r1
 2671 0b04 0331A0E1 		mov	r3, r3, asl #2
 2672 0b08 013083E0 		add	r3, r3, r1
 2673 0b0c 8330A0E1 		mov	r3, r3, asl #1
 2674 0b10 023063E0 		rsb	r3, r3, r2
 2675 0b14 FF3003E2 		and	r3, r3, #255
 2676 0b18 0332A0E1 		mov	r3, r3, asl #4
 2677 0b1c FFC003E2 		and	ip, r3, #255
 2678 0b20 14301BE5 		ldr	r3, [fp, #-20]
 2679 0b24 0320D3E5 		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 2680 0b28 1C329FE5 		ldr	r3, .L14+4
 2681 0b2c 921383E0 		umull	r1, r3, r2, r3
 2682 0b30 A311A0E1 		mov	r1, r3, lsr #3
 2683 0b34 0130A0E1 		mov	r3, r1
 2684 0b38 0331A0E1 		mov	r3, r3, asl #2
 2685 0b3c 013083E0 		add	r3, r3, r1
 2686 0b40 8330A0E1 		mov	r3, r3, asl #1
 2687 0b44 023063E0 		rsb	r3, r3, r2
 2688 0b48 FF3003E2 		and	r3, r3, #255
 2689 0b4c FF3003E2 		and	r3, r3, #255
 2690 0b50 0C20A0E1 		mov	r2, ip
 2691 0b54 033082E1 		orr	r3, r2, r3
 2692 0b58 FF3003E2 		and	r3, r3, #255
 2693 0b5c FF3003E2 		and	r3, r3, #255
 2694 0b60 0030C0E5 		strb	r3, [r0, #0]
 104:../rtc.c      ****     rALMHOUR = ((rtc_time->hour / 10) % 10) << 4 | (rtc_time->hour % 10);
 2695              		.loc 1 104 0
 2696 0b64 EC019FE5 		ldr	r0, .L14+16
 2697 0b68 14301BE5 		ldr	r3, [fp, #-20]
 2698 0b6c 0220D3E5 		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 2699 0b70 D4319FE5 		ldr	r3, .L14+4
 2700 0b74 921383E0 		umull	r1, r3, r2, r3
 2701 0b78 A331A0E1 		mov	r3, r3, lsr #3
 2702 0b7c FF2003E2 		and	r2, r3, #255
 2703 0b80 C4319FE5 		ldr	r3, .L14+4
 2704 0b84 921383E0 		umull	r1, r3, r2, r3
 2705 0b88 A311A0E1 		mov	r1, r3, lsr #3
 2706 0b8c 0130A0E1 		mov	r3, r1
 2707 0b90 0331A0E1 		mov	r3, r3, asl #2
 2708 0b94 013083E0 		add	r3, r3, r1
 2709 0b98 8330A0E1 		mov	r3, r3, asl #1
 2710 0b9c 023063E0 		rsb	r3, r3, r2
 2711 0ba0 FF3003E2 		and	r3, r3, #255
 2712 0ba4 0332A0E1 		mov	r3, r3, asl #4
 2713 0ba8 FFC003E2 		and	ip, r3, #255
 2714 0bac 14301BE5 		ldr	r3, [fp, #-20]
 2715 0bb0 0220D3E5 		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 2716 0bb4 90319FE5 		ldr	r3, .L14+4
 2717 0bb8 921383E0 		umull	r1, r3, r2, r3
 2718 0bbc A311A0E1 		mov	r1, r3, lsr #3
 2719 0bc0 0130A0E1 		mov	r3, r1
 2720 0bc4 0331A0E1 		mov	r3, r3, asl #2
 2721 0bc8 013083E0 		add	r3, r3, r1
 2722 0bcc 8330A0E1 		mov	r3, r3, asl #1
 2723 0bd0 023063E0 		rsb	r3, r3, r2
 2724 0bd4 FF3003E2 		and	r3, r3, #255
 2725 0bd8 FF3003E2 		and	r3, r3, #255
 2726 0bdc 0C20A0E1 		mov	r2, ip
 2727 0be0 033082E1 		orr	r3, r2, r3
 2728 0be4 FF3003E2 		and	r3, r3, #255
 2729 0be8 FF3003E2 		and	r3, r3, #255
 2730 0bec 0030C0E5 		strb	r3, [r0, #0]
 105:../rtc.c      ****     rALMMIN  = ((rtc_time->min / 10) % 10) << 4 | (rtc_time->min % 10);
 2731              		.loc 1 105 0
 2732 0bf0 64019FE5 		ldr	r0, .L14+20
 2733 0bf4 14301BE5 		ldr	r3, [fp, #-20]
 2734 0bf8 0120D3E5 		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 2735 0bfc 48319FE5 		ldr	r3, .L14+4
 2736 0c00 921383E0 		umull	r1, r3, r2, r3
 2737 0c04 A331A0E1 		mov	r3, r3, lsr #3
 2738 0c08 FF2003E2 		and	r2, r3, #255
 2739 0c0c 38319FE5 		ldr	r3, .L14+4
 2740 0c10 921383E0 		umull	r1, r3, r2, r3
 2741 0c14 A311A0E1 		mov	r1, r3, lsr #3
 2742 0c18 0130A0E1 		mov	r3, r1
 2743 0c1c 0331A0E1 		mov	r3, r3, asl #2
 2744 0c20 013083E0 		add	r3, r3, r1
 2745 0c24 8330A0E1 		mov	r3, r3, asl #1
 2746 0c28 023063E0 		rsb	r3, r3, r2
 2747 0c2c FF3003E2 		and	r3, r3, #255
 2748 0c30 0332A0E1 		mov	r3, r3, asl #4
 2749 0c34 FFC003E2 		and	ip, r3, #255
 2750 0c38 14301BE5 		ldr	r3, [fp, #-20]
 2751 0c3c 0120D3E5 		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 2752 0c40 04319FE5 		ldr	r3, .L14+4
 2753 0c44 921383E0 		umull	r1, r3, r2, r3
 2754 0c48 A311A0E1 		mov	r1, r3, lsr #3
 2755 0c4c 0130A0E1 		mov	r3, r1
 2756 0c50 0331A0E1 		mov	r3, r3, asl #2
 2757 0c54 013083E0 		add	r3, r3, r1
 2758 0c58 8330A0E1 		mov	r3, r3, asl #1
 2759 0c5c 023063E0 		rsb	r3, r3, r2
 2760 0c60 FF3003E2 		and	r3, r3, #255
 2761 0c64 FF3003E2 		and	r3, r3, #255
 2762 0c68 0C20A0E1 		mov	r2, ip
 2763 0c6c 033082E1 		orr	r3, r2, r3
 2764 0c70 FF3003E2 		and	r3, r3, #255
 2765 0c74 FF3003E2 		and	r3, r3, #255
 2766 0c78 0030C0E5 		strb	r3, [r0, #0]
 106:../rtc.c      ****     rALMSEC  = ((rtc_time->sec / 10) % 10) << 4 | (rtc_time->sec % 10);
 2767              		.loc 1 106 0
 2768 0c7c DC009FE5 		ldr	r0, .L14+24
 2769 0c80 14301BE5 		ldr	r3, [fp, #-20]
 2770 0c84 0020D3E5 		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 2771 0c88 BC309FE5 		ldr	r3, .L14+4
 2772 0c8c 921383E0 		umull	r1, r3, r2, r3
 2773 0c90 A331A0E1 		mov	r3, r3, lsr #3
 2774 0c94 FF2003E2 		and	r2, r3, #255
 2775 0c98 AC309FE5 		ldr	r3, .L14+4
 2776 0c9c 921383E0 		umull	r1, r3, r2, r3
 2777 0ca0 A311A0E1 		mov	r1, r3, lsr #3
 2778 0ca4 0130A0E1 		mov	r3, r1
 2779 0ca8 0331A0E1 		mov	r3, r3, asl #2
 2780 0cac 013083E0 		add	r3, r3, r1
 2781 0cb0 8330A0E1 		mov	r3, r3, asl #1
 2782 0cb4 023063E0 		rsb	r3, r3, r2
 2783 0cb8 FF3003E2 		and	r3, r3, #255
 2784 0cbc 0332A0E1 		mov	r3, r3, asl #4
 2785 0cc0 FFC003E2 		and	ip, r3, #255
 2786 0cc4 14301BE5 		ldr	r3, [fp, #-20]
 2787 0cc8 0020D3E5 		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 2788 0ccc 78309FE5 		ldr	r3, .L14+4
 2789 0cd0 921383E0 		umull	r1, r3, r2, r3
 2790 0cd4 A311A0E1 		mov	r1, r3, lsr #3
 2791 0cd8 0130A0E1 		mov	r3, r1
 2792 0cdc 0331A0E1 		mov	r3, r3, asl #2
 2793 0ce0 013083E0 		add	r3, r3, r1
 2794 0ce4 8330A0E1 		mov	r3, r3, asl #1
 2795 0ce8 023063E0 		rsb	r3, r3, r2
 2796 0cec FF3003E2 		and	r3, r3, #255
 2797 0cf0 FF3003E2 		and	r3, r3, #255
 2798 0cf4 0C20A0E1 		mov	r2, ip
 2799 0cf8 033082E1 		orr	r3, r2, r3
 2800 0cfc FF3003E2 		and	r3, r3, #255
 2801 0d00 FF3003E2 		and	r3, r3, #255
 2802 0d04 0030C0E5 		strb	r3, [r0, #0]
 107:../rtc.c      **** 
 108:../rtc.c      **** 	//Enable alarm (bits [7:0] = 1)
 109:../rtc.c      ****     rRTCALM  = 0x7F;
 2803              		.loc 1 109 0
 2804 0d08 54309FE5 		ldr	r3, .L14+28
 2805 0d0c 7F20A0E3 		mov	r2, #127
 2806 0d10 0020C3E5 		strb	r2, [r3, #0]
 110:../rtc.c      **** 
 111:../rtc.c      ****     ic_conf_line(INT_RTC, IRQ);
 2807              		.loc 1 111 0
 2808 0d14 0100A0E3 		mov	r0, #1
 2809 0d18 0010A0E3 		mov	r1, #0
 2810 0d1c FEFFFFEB 		bl	ic_conf_line
 112:../rtc.c      ****     ic_cleanflag(INT_RTC);
 2811              		.loc 1 112 0
 2812 0d20 0100A0E3 		mov	r0, #1
 2813 0d24 FEFFFFEB 		bl	ic_cleanflag
 113:../rtc.c      ****     ic_enable(INT_RTC);
 2814              		.loc 1 113 0
 2815 0d28 0100A0E3 		mov	r0, #1
 2816 0d2c FEFFFFEB 		bl	ic_enable
 114:../rtc.c      **** 
 115:../rtc.c      ****     pISR_RTC = (unsigned) isr;
 2817              		.loc 1 115 0
 2818 0d30 30309FE5 		ldr	r3, .L14+32
 2819 0d34 10201BE5 		ldr	r2, [fp, #-16]
 2820 0d38 002083E5 		str	r2, [r3, #0]
 116:../rtc.c      **** }
 2821              		.loc 1 116 0
 2822 0d3c 0CD04BE2 		sub	sp, fp, #12
 2823 0d40 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2824 0d44 1EFF2FE1 		bx	lr
 2825              	.L15:
 2826              		.align	2
 2827              	.L14:
 2828 0d48 6800D701 		.word	30867560
 2829 0d4c CDCCCCCC 		.word	-858993459
 2830 0d50 6400D701 		.word	30867556
 2831 0d54 6000D701 		.word	30867552
 2832 0d58 5C00D701 		.word	30867548
 2833 0d5c 5800D701 		.word	30867544
 2834 0d60 5400D701 		.word	30867540
 2835 0d64 5000D701 		.word	30867536
 2836 0d68 24FF7F0C 		.word	209714980
 2837              		.cfi_endproc
 2838              	.LFE5:
 2840              		.align	2
 2841              		.global	rtc_clear_alarm
 2843              	rtc_clear_alarm:
 2844              	.LFB6:
 117:../rtc.c      **** 
 118:../rtc.c      **** void rtc_clear_alarm() {
 2845              		.loc 1 118 0
 2846              		.cfi_startproc
 2847              		@ Function supports interworking.
 2848              		@ args = 0, pretend = 0, frame = 0
 2849              		@ frame_needed = 1, uses_anonymous_args = 0
 2850 0d6c 0DC0A0E1 		mov	ip, sp
 2851              	.LCFI12:
 2852              		.cfi_def_cfa_register 12
 2853 0d70 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2854 0d74 04B04CE2 		sub	fp, ip, #4
 2855              		.cfi_offset 14, -8
 2856              		.cfi_offset 13, -12
 2857              		.cfi_offset 11, -16
 2858              	.LCFI13:
 2859              		.cfi_def_cfa 11, 4
 119:../rtc.c      **** 	ic_disable(INT_RTC);
 2860              		.loc 1 119 0
 2861 0d78 0100A0E3 		mov	r0, #1
 2862 0d7c FEFFFFEB 		bl	ic_disable
 120:../rtc.c      **** 	pISR_RTC = (unsigned) isr_ALARM_dummy;
 2863              		.loc 1 120 0
 2864 0d80 1C309FE5 		ldr	r3, .L17
 2865 0d84 1C209FE5 		ldr	r2, .L17+4
 2866 0d88 002083E5 		str	r2, [r3, #0]
 121:../rtc.c      ****     rRTCALM  = 0;
 2867              		.loc 1 121 0
 2868 0d8c 18309FE5 		ldr	r3, .L17+8
 2869 0d90 0020A0E3 		mov	r2, #0
 2870 0d94 0020C3E5 		strb	r2, [r3, #0]
 122:../rtc.c      **** }
 2871              		.loc 1 122 0
 2872 0d98 0CD04BE2 		sub	sp, fp, #12
 2873 0d9c 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2874 0da0 1EFF2FE1 		bx	lr
 2875              	.L18:
 2876              		.align	2
 2877              	.L17:
 2878 0da4 24FF7F0C 		.word	209714980
 2879 0da8 00000000 		.word	isr_ALARM_dummy
 2880 0dac 5000D701 		.word	30867536
 2881              		.cfi_endproc
 2882              	.LFE6:
 2884              		.align	2
 2885              		.global	rtc_open
 2887              	rtc_open:
 2888              	.LFB7:
 123:../rtc.c      **** 
 124:../rtc.c      **** // Sets ISR to RTC ticks (tick_count)
 125:../rtc.c      **** void rtc_open( void (*isr)(void), uint8 tick_count )
 126:../rtc.c      **** {
 2889              		.loc 1 126 0
 2890              		.cfi_startproc
 2891              		@ Function supports interworking.
 2892              		@ args = 0, pretend = 0, frame = 8
 2893              		@ frame_needed = 1, uses_anonymous_args = 0
 2894 0db0 0DC0A0E1 		mov	ip, sp
 2895              	.LCFI14:
 2896              		.cfi_def_cfa_register 12
 2897 0db4 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2898 0db8 04B04CE2 		sub	fp, ip, #4
 2899              		.cfi_offset 14, -8
 2900              		.cfi_offset 13, -12
 2901              		.cfi_offset 11, -16
 2902              	.LCFI15:
 2903              		.cfi_def_cfa 11, 4
 2904 0dbc 08D04DE2 		sub	sp, sp, #8
 2905 0dc0 10000BE5 		str	r0, [fp, #-16]
 2906 0dc4 0130A0E1 		mov	r3, r1
 2907 0dc8 11304BE5 		strb	r3, [fp, #-17]
 127:../rtc.c      ****     pISR_TICK = (unsigned)isr;
 2908              		.loc 1 127 0
 2909 0dcc 44309FE5 		ldr	r3, .L20
 2910 0dd0 10201BE5 		ldr	r2, [fp, #-16]
 2911 0dd4 002083E5 		str	r2, [r3, #0]
 128:../rtc.c      **** 
 129:../rtc.c      ****     ic_conf_line(INT_TICK, IRQ);
 2912              		.loc 1 129 0
 2913 0dd8 1400A0E3 		mov	r0, #20
 2914 0ddc 0010A0E3 		mov	r1, #0
 2915 0de0 FEFFFFEB 		bl	ic_conf_line
 130:../rtc.c      ****     ic_cleanflag(INT_TICK);
 2916              		.loc 1 130 0
 2917 0de4 1400A0E3 		mov	r0, #20
 2918 0de8 FEFFFFEB 		bl	ic_cleanflag
 131:../rtc.c      ****     ic_enable(INT_TICK);
 2919              		.loc 1 131 0
 2920 0dec 1400A0E3 		mov	r0, #20
 2921 0df0 FEFFFFEB 		bl	ic_enable
 132:../rtc.c      **** 
 133:../rtc.c      ****     rTICINT = 1 << 7 | (tick_count & 0b1111111);
 2922              		.loc 1 133 0
 2923 0df4 20209FE5 		ldr	r2, .L20+4
 2924 0df8 11305BE5 		ldrb	r3, [fp, #-17]
 2925 0dfc 833CE0E1 		mvn	r3, r3, asl #25
 2926 0e00 A33CE0E1 		mvn	r3, r3, lsr #25
 2927 0e04 FF3003E2 		and	r3, r3, #255
 2928 0e08 0030C2E5 		strb	r3, [r2, #0]
 134:../rtc.c      **** }
 2929              		.loc 1 134 0
 2930 0e0c 0CD04BE2 		sub	sp, fp, #12
 2931 0e10 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2932 0e14 1EFF2FE1 		bx	lr
 2933              	.L21:
 2934              		.align	2
 2935              	.L20:
 2936 0e18 70FF7F0C 		.word	209715056
 2937 0e1c 8C00D701 		.word	30867596
 2938              		.cfi_endproc
 2939              	.LFE7:
 2941              		.align	2
 2942              		.global	rtc_close
 2944              	rtc_close:
 2945              	.LFB8:
 135:../rtc.c      **** 
 136:../rtc.c      **** // Removes RTC ISR
 137:../rtc.c      **** void rtc_close( void )
 138:../rtc.c      **** {
 2946              		.loc 1 138 0
 2947              		.cfi_startproc
 2948              		@ Function supports interworking.
 2949              		@ args = 0, pretend = 0, frame = 0
 2950              		@ frame_needed = 1, uses_anonymous_args = 0
 2951 0e20 0DC0A0E1 		mov	ip, sp
 2952              	.LCFI16:
 2953              		.cfi_def_cfa_register 12
 2954 0e24 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2955 0e28 04B04CE2 		sub	fp, ip, #4
 2956              		.cfi_offset 14, -8
 2957              		.cfi_offset 13, -12
 2958              		.cfi_offset 11, -16
 2959              	.LCFI17:
 2960              		.cfi_def_cfa 11, 4
 139:../rtc.c      ****     rTICINT = 0;
 2961              		.loc 1 139 0
 2962 0e2c 24309FE5 		ldr	r3, .L23
 2963 0e30 0020A0E3 		mov	r2, #0
 2964 0e34 0020C3E5 		strb	r2, [r3, #0]
 140:../rtc.c      ****     ic_disable(INT_TICK);
 2965              		.loc 1 140 0
 2966 0e38 1400A0E3 		mov	r0, #20
 2967 0e3c FEFFFFEB 		bl	ic_disable
 141:../rtc.c      ****     pISR_TICK = (unsigned)isr_TICK_dummy;
 2968              		.loc 1 141 0
 2969 0e40 14309FE5 		ldr	r3, .L23+4
 2970 0e44 14209FE5 		ldr	r2, .L23+8
 2971 0e48 002083E5 		str	r2, [r3, #0]
 142:../rtc.c      **** }
 2972              		.loc 1 142 0
 2973 0e4c 0CD04BE2 		sub	sp, fp, #12
 2974 0e50 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2975 0e54 1EFF2FE1 		bx	lr
 2976              	.L24:
 2977              		.align	2
 2978              	.L23:
 2979 0e58 8C00D701 		.word	30867596
 2980 0e5c 70FF7F0C 		.word	209715056
 2981 0e60 00000000 		.word	isr_TICK_dummy
 2982              		.cfi_endproc
 2983              	.LFE8:
 2985              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 rtc.c
C:\Users\Pedro\AppData\Local\Temp\ccJWoVj3.s:1777   .text:00000000 $a
C:\Users\Pedro\AppData\Local\Temp\ccJWoVj3.s:1780   .text:00000000 isr_TICK_dummy
C:\Users\Pedro\AppData\Local\Temp\ccJWoVj3.s:1816   .text:00000028 isr_ALARM_dummy
C:\Users\Pedro\AppData\Local\Temp\ccJWoVj3.s:1852   .text:00000050 rtc_init
C:\Users\Pedro\AppData\Local\Temp\ccJWoVj3.s:1952   .text:00000150 $d
C:\Users\Pedro\AppData\Local\Temp\ccJWoVj3.s:1972   .text:00000194 $a
C:\Users\Pedro\AppData\Local\Temp\ccJWoVj3.s:1975   .text:00000194 rtc_puttime
C:\Users\Pedro\AppData\Local\Temp\ccJWoVj3.s:2238   .text:00000544 $d
C:\Users\Pedro\AppData\Local\Temp\ccJWoVj3.s:2250   .text:00000568 $a
C:\Users\Pedro\AppData\Local\Temp\ccJWoVj3.s:2253   .text:00000568 rtc_gettime
C:\Users\Pedro\AppData\Local\Temp\ccJWoVj3.s:2553   .text:00000988 $d
C:\Users\Pedro\AppData\Local\Temp\ccJWoVj3.s:2564   .text:000009a8 $a
C:\Users\Pedro\AppData\Local\Temp\ccJWoVj3.s:2567   .text:000009a8 rtc_set_alarm
C:\Users\Pedro\AppData\Local\Temp\ccJWoVj3.s:2828   .text:00000d48 $d
C:\Users\Pedro\AppData\Local\Temp\ccJWoVj3.s:2840   .text:00000d6c $a
C:\Users\Pedro\AppData\Local\Temp\ccJWoVj3.s:2843   .text:00000d6c rtc_clear_alarm
C:\Users\Pedro\AppData\Local\Temp\ccJWoVj3.s:2878   .text:00000da4 $d
C:\Users\Pedro\AppData\Local\Temp\ccJWoVj3.s:2884   .text:00000db0 $a
C:\Users\Pedro\AppData\Local\Temp\ccJWoVj3.s:2887   .text:00000db0 rtc_open
C:\Users\Pedro\AppData\Local\Temp\ccJWoVj3.s:2936   .text:00000e18 $d
C:\Users\Pedro\AppData\Local\Temp\ccJWoVj3.s:2941   .text:00000e20 $a
C:\Users\Pedro\AppData\Local\Temp\ccJWoVj3.s:2944   .text:00000e20 rtc_close
C:\Users\Pedro\AppData\Local\Temp\ccJWoVj3.s:2979   .text:00000e58 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
ic_cleanflag
ic_conf_line
ic_enable
ic_disable
