   1              		.cpu arm7tdmi
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 18, 4
  11              		.file	"os_time.c"
  21              	.Ltext0:
  22              		.file 1 "../kernel/os_core/os_time.c"
 1630              		.align	2
 1631              		.global	OSTimeDly
 1633              	OSTimeDly:
 1634              	.LFB0:
   1:../kernel/os_core/os_time.c **** /*
   2:../kernel/os_core/os_time.c **** ***************************************************************************************************
   3:../kernel/os_core/os_time.c **** *                                                uC/OS-II
   4:../kernel/os_core/os_time.c **** *                                          The Real-Time Kernel
   5:../kernel/os_core/os_time.c **** *                                             TIME MANAGEMENT
   6:../kernel/os_core/os_time.c **** *
   7:../kernel/os_core/os_time.c **** *                          (c) Copyright 1992-2003, Jean J. Labrosse, Weston, FL
   8:../kernel/os_core/os_time.c **** *                                           All Rights Reserved
   9:../kernel/os_core/os_time.c **** *
  10:../kernel/os_core/os_time.c **** * File    : OS_TIME.C
  11:../kernel/os_core/os_time.c **** * By      : Jean J. Labrosse
  12:../kernel/os_core/os_time.c **** * Version : V2.76
  13:../kernel/os_core/os_time.c **** ***************************************************************************************************
  14:../kernel/os_core/os_time.c **** */
  15:../kernel/os_core/os_time.c **** 
  16:../kernel/os_core/os_time.c **** #ifndef  OS_MASTER_FILE
  17:../kernel/os_core/os_time.c **** #include "ucos_ii.h"
  18:../kernel/os_core/os_time.c **** #endif
  19:../kernel/os_core/os_time.c **** 
  20:../kernel/os_core/os_time.c **** /*
  21:../kernel/os_core/os_time.c **** ***************************************************************************************************
  22:../kernel/os_core/os_time.c **** *                                DELAY TASK 'n' TICKS   (n from 0 to 65535)
  23:../kernel/os_core/os_time.c **** *
  24:../kernel/os_core/os_time.c **** * Description: This function is called to delay execution of the currently running task until the
  25:../kernel/os_core/os_time.c **** *              specified number of system ticks expires.  This, of course, directly equates to dela
  26:../kernel/os_core/os_time.c **** *              the current task for some time to expire.  No delay will result If the specified del
  27:../kernel/os_core/os_time.c **** *              0.  If the specified delay is greater than 0 then, a context switch will result.
  28:../kernel/os_core/os_time.c **** *
  29:../kernel/os_core/os_time.c **** * Arguments  : ticks     is the time delay that the task will be suspended in number of clock 'tick
  30:../kernel/os_core/os_time.c **** *                        Note that by specifying 0, the task will not be delayed.
  31:../kernel/os_core/os_time.c **** *
  32:../kernel/os_core/os_time.c **** * Returns    : none
  33:../kernel/os_core/os_time.c **** ***************************************************************************************************
  34:../kernel/os_core/os_time.c **** */
  35:../kernel/os_core/os_time.c **** 
  36:../kernel/os_core/os_time.c **** void  OSTimeDly (INT16U ticks)
  37:../kernel/os_core/os_time.c **** {
 1635              		.loc 1 37 0
 1636              		.cfi_startproc
 1637              		@ Function supports interworking.
 1638              		@ args = 0, pretend = 0, frame = 16
 1639              		@ frame_needed = 1, uses_anonymous_args = 0
 1640 0000 0DC0A0E1 		mov	ip, sp
 1641              	.LCFI0:
 1642              		.cfi_def_cfa_register 12
 1643 0004 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1644 0008 04B04CE2 		sub	fp, ip, #4
 1645              		.cfi_offset 14, -8
 1646              		.cfi_offset 13, -12
 1647              		.cfi_offset 11, -16
 1648              	.LCFI1:
 1649              		.cfi_def_cfa 11, 4
 1650 000c 10D04DE2 		sub	sp, sp, #16
 1651 0010 0030A0E1 		mov	r3, r0
 1652 0014 B6314BE1 		strh	r3, [fp, #-22]	@ movhi
  38:../kernel/os_core/os_time.c ****     INT8U      y;
  39:../kernel/os_core/os_time.c **** #if OS_CRITICAL_METHOD == 3                      /* Allocate storage for CPU status register       
  40:../kernel/os_core/os_time.c ****     OS_CPU_SR  cpu_sr;
  41:../kernel/os_core/os_time.c **** 
  42:../kernel/os_core/os_time.c **** 
  43:../kernel/os_core/os_time.c **** 
  44:../kernel/os_core/os_time.c ****     cpu_sr = 0;                                  /* Prevent compiler warning                       
  45:../kernel/os_core/os_time.c **** #endif    
  46:../kernel/os_core/os_time.c ****     if (ticks > 0) {                             /* 0 means no delay!                              
 1653              		.loc 1 46 0
 1654 0018 B6315BE1 		ldrh	r3, [fp, #-22]
 1655 001c 000053E3 		cmp	r3, #0
 1656 0020 3100000A 		beq	.L1
  47:../kernel/os_core/os_time.c ****         OS_ENTER_CRITICAL();
 1657              		.loc 1 47 0
 1658              	@ 47 "../kernel/os_core/os_time.c" 1
 1659 0024 00000FE1 		mrs   r0, cpsr
 1660              	@ 0 "" 2
 1661              	@ 47 "../kernel/os_core/os_time.c" 1
 1662 0028 04002DE5 		stmfd sp!, {r0}
 1663              	@ 0 "" 2
 1664              	@ 47 "../kernel/os_core/os_time.c" 1
 1665 002c C00080E3 		orr   r0, r0, #0b11000000
 1666              	@ 0 "" 2
 1667              	@ 47 "../kernel/os_core/os_time.c" 1
 1668 0030 00F021E1 		msr   cpsr_c, r0
 1669              	@ 0 "" 2
  48:../kernel/os_core/os_time.c ****         y            =  OSTCBCur->OSTCBY;        /* Delay current task                             
 1670              		.loc 1 48 0
 1671 0034 BC309FE5 		ldr	r3, .L4
 1672 0038 003093E5 		ldr	r3, [r3, #0]
 1673 003c 3030D3E5 		ldrb	r3, [r3, #48]
 1674 0040 0D304BE5 		strb	r3, [fp, #-13]
  49:../kernel/os_core/os_time.c ****         OSRdyTbl[y] &= ~OSTCBCur->OSTCBBitX;
 1675              		.loc 1 49 0
 1676 0044 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 1677 0048 0D205BE5 		ldrb	r2, [fp, #-13]	@ zero_extendqisi2
 1678 004c A8109FE5 		ldr	r1, .L4+4
 1679 0050 0220D1E7 		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 1680 0054 FF1002E2 		and	r1, r2, #255
 1681 0058 98209FE5 		ldr	r2, .L4
 1682 005c 002092E5 		ldr	r2, [r2, #0]
 1683 0060 3120D2E5 		ldrb	r2, [r2, #49]	@ zero_extendqisi2
 1684 0064 FF2002E2 		and	r2, r2, #255
 1685 0068 0220E0E1 		mvn	r2, r2
 1686 006c FF2002E2 		and	r2, r2, #255
 1687 0070 022001E0 		and	r2, r1, r2
 1688 0074 FF2002E2 		and	r2, r2, #255
 1689 0078 FF1002E2 		and	r1, r2, #255
 1690 007c 78209FE5 		ldr	r2, .L4+4
 1691 0080 0310C2E7 		strb	r1, [r2, r3]
  50:../kernel/os_core/os_time.c ****         if (OSRdyTbl[y] == 0) {  
 1692              		.loc 1 50 0
 1693 0084 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 1694 0088 6C209FE5 		ldr	r2, .L4+4
 1695 008c 0330D2E7 		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1696 0090 000053E3 		cmp	r3, #0
 1697 0094 0D00001A 		bne	.L3
  51:../kernel/os_core/os_time.c ****             OSRdyGrp &= ~OSTCBCur->OSTCBBitY;
 1698              		.loc 1 51 0
 1699 0098 58309FE5 		ldr	r3, .L4
 1700 009c 003093E5 		ldr	r3, [r3, #0]
 1701 00a0 3230D3E5 		ldrb	r3, [r3, #50]	@ zero_extendqisi2
 1702 00a4 FF3003E2 		and	r3, r3, #255
 1703 00a8 0330E0E1 		mvn	r3, r3
 1704 00ac FF2003E2 		and	r2, r3, #255
 1705 00b0 48309FE5 		ldr	r3, .L4+8
 1706 00b4 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1707 00b8 FF3003E2 		and	r3, r3, #255
 1708 00bc 033002E0 		and	r3, r2, r3
 1709 00c0 FF3003E2 		and	r3, r3, #255
 1710 00c4 FF2003E2 		and	r2, r3, #255
 1711 00c8 30309FE5 		ldr	r3, .L4+8
 1712 00cc 0020C3E5 		strb	r2, [r3, #0]
 1713              	.L3:
  52:../kernel/os_core/os_time.c ****         }
  53:../kernel/os_core/os_time.c ****         OSTCBCur->OSTCBDly = ticks;              /* Load ticks in TCB                              
 1714              		.loc 1 53 0
 1715 00d0 20309FE5 		ldr	r3, .L4
 1716 00d4 003093E5 		ldr	r3, [r3, #0]
 1717 00d8 B6215BE1 		ldrh	r2, [fp, #-22]	@ movhi
 1718 00dc BA22C3E1 		strh	r2, [r3, #42]	@ movhi
  54:../kernel/os_core/os_time.c ****         OS_EXIT_CRITICAL();
 1719              		.loc 1 54 0
 1720              	@ 54 "../kernel/os_core/os_time.c" 1
 1721 00e0 04009DE4 		ldmfd sp!, {r0}
 1722              	@ 0 "" 2
 1723              	@ 54 "../kernel/os_core/os_time.c" 1
 1724 00e4 00F021E1 		msr   cpsr_c, r0
 1725              	@ 0 "" 2
  55:../kernel/os_core/os_time.c ****         OS_Sched();                              /* Find next task to run!                         
 1726              		.loc 1 55 0
 1727 00e8 FEFFFFEB 		bl	OS_Sched
 1728              	.L1:
  56:../kernel/os_core/os_time.c ****     }
  57:../kernel/os_core/os_time.c **** }
 1729              		.loc 1 57 0
 1730 00ec 0CD04BE2 		sub	sp, fp, #12
 1731 00f0 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1732 00f4 1EFF2FE1 		bx	lr
 1733              	.L5:
 1734              		.align	2
 1735              	.L4:
 1736 00f8 00000000 		.word	OSTCBCur
 1737 00fc 00000000 		.word	OSRdyTbl
 1738 0100 00000000 		.word	OSRdyGrp
 1739              		.cfi_endproc
 1740              	.LFE0:
 1742              		.align	2
 1743              		.global	OSTimeDlyHMSM
 1745              	OSTimeDlyHMSM:
 1746              	.LFB1:
  58:../kernel/os_core/os_time.c **** /*$PAGE*/
  59:../kernel/os_core/os_time.c **** /*
  60:../kernel/os_core/os_time.c **** ***************************************************************************************************
  61:../kernel/os_core/os_time.c **** *                                     DELAY TASK FOR SPECIFIED TIME
  62:../kernel/os_core/os_time.c **** *
  63:../kernel/os_core/os_time.c **** * Description: This function is called to delay execution of the currently running task until some 
  64:../kernel/os_core/os_time.c **** *              expires.  This call allows you to specify the delay time in HOURS, MINUTES, SECONDS 
  65:../kernel/os_core/os_time.c **** *              MILLISECONDS instead of ticks.
  66:../kernel/os_core/os_time.c **** *
  67:../kernel/os_core/os_time.c **** * Arguments  : hours     specifies the number of hours that the task will be delayed (max. is 255)
  68:../kernel/os_core/os_time.c **** *              minutes   specifies the number of minutes (max. 59)
  69:../kernel/os_core/os_time.c **** *              seconds   specifies the number of seconds (max. 59)
  70:../kernel/os_core/os_time.c **** *              milli     specifies the number of milliseconds (max. 999)
  71:../kernel/os_core/os_time.c **** *
  72:../kernel/os_core/os_time.c **** * Returns    : OS_NO_ERR
  73:../kernel/os_core/os_time.c **** *              OS_TIME_INVALID_MINUTES
  74:../kernel/os_core/os_time.c **** *              OS_TIME_INVALID_SECONDS
  75:../kernel/os_core/os_time.c **** *              OS_TIME_INVALID_MS
  76:../kernel/os_core/os_time.c **** *              OS_TIME_ZERO_DLY
  77:../kernel/os_core/os_time.c **** *
  78:../kernel/os_core/os_time.c **** * Note(s)    : The resolution on the milliseconds depends on the tick rate.  For example, you can't
  79:../kernel/os_core/os_time.c **** *              a 10 mS delay if the ticker interrupts every 100 mS.  In this case, the delay would 
  80:../kernel/os_core/os_time.c **** *              set to 0.  The actual delay is rounded to the nearest tick.
  81:../kernel/os_core/os_time.c **** ***************************************************************************************************
  82:../kernel/os_core/os_time.c **** */
  83:../kernel/os_core/os_time.c **** 
  84:../kernel/os_core/os_time.c **** #if OS_TIME_DLY_HMSM_EN > 0
  85:../kernel/os_core/os_time.c **** INT8U  OSTimeDlyHMSM (INT8U hours, INT8U minutes, INT8U seconds, INT16U milli)
  86:../kernel/os_core/os_time.c **** {
 1747              		.loc 1 86 0
 1748              		.cfi_startproc
 1749              		@ Function supports interworking.
 1750              		@ args = 0, pretend = 0, frame = 16
 1751              		@ frame_needed = 1, uses_anonymous_args = 0
 1752 0104 0DC0A0E1 		mov	ip, sp
 1753              	.LCFI2:
 1754              		.cfi_def_cfa_register 12
 1755 0108 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1756 010c 04B04CE2 		sub	fp, ip, #4
 1757              		.cfi_offset 14, -8
 1758              		.cfi_offset 13, -12
 1759              		.cfi_offset 11, -16
 1760              	.LCFI3:
 1761              		.cfi_def_cfa 11, 4
 1762 0110 10D04DE2 		sub	sp, sp, #16
 1763 0114 15004BE5 		strb	r0, [fp, #-21]
 1764 0118 16104BE5 		strb	r1, [fp, #-22]
 1765 011c 17204BE5 		strb	r2, [fp, #-23]
 1766 0120 BA314BE1 		strh	r3, [fp, #-26]	@ movhi
  87:../kernel/os_core/os_time.c ****     INT32U ticks;
  88:../kernel/os_core/os_time.c ****     INT16U loops;
  89:../kernel/os_core/os_time.c **** 
  90:../kernel/os_core/os_time.c **** 
  91:../kernel/os_core/os_time.c **** #if OS_ARG_CHK_EN > 0
  92:../kernel/os_core/os_time.c ****     if (hours == 0) {
 1767              		.loc 1 92 0
 1768 0124 15305BE5 		ldrb	r3, [fp, #-21]	@ zero_extendqisi2
 1769 0128 000053E3 		cmp	r3, #0
 1770 012c 0A00001A 		bne	.L7
  93:../kernel/os_core/os_time.c ****         if (minutes == 0) {
 1771              		.loc 1 93 0
 1772 0130 16305BE5 		ldrb	r3, [fp, #-22]	@ zero_extendqisi2
 1773 0134 000053E3 		cmp	r3, #0
 1774 0138 0700001A 		bne	.L7
  94:../kernel/os_core/os_time.c ****             if (seconds == 0) {
 1775              		.loc 1 94 0
 1776 013c 17305BE5 		ldrb	r3, [fp, #-23]	@ zero_extendqisi2
 1777 0140 000053E3 		cmp	r3, #0
 1778 0144 0400001A 		bne	.L7
  95:../kernel/os_core/os_time.c ****                 if (milli == 0) {
 1779              		.loc 1 95 0
 1780 0148 BA315BE1 		ldrh	r3, [fp, #-26]
 1781 014c 000053E3 		cmp	r3, #0
 1782 0150 0100001A 		bne	.L7
  96:../kernel/os_core/os_time.c ****                     return (OS_TIME_ZERO_DLY);
 1783              		.loc 1 96 0
 1784 0154 5430A0E3 		mov	r3, #84
 1785 0158 4C0000EA 		b	.L8
 1786              	.L7:
  97:../kernel/os_core/os_time.c ****                 }
  98:../kernel/os_core/os_time.c ****             }
  99:../kernel/os_core/os_time.c ****         }
 100:../kernel/os_core/os_time.c ****     }
 101:../kernel/os_core/os_time.c ****     if (minutes > 59) {
 1787              		.loc 1 101 0
 1788 015c 16305BE5 		ldrb	r3, [fp, #-22]	@ zero_extendqisi2
 1789 0160 3B0053E3 		cmp	r3, #59
 1790 0164 0100009A 		bls	.L9
 102:../kernel/os_core/os_time.c ****         return (OS_TIME_INVALID_MINUTES);        /* Validate arguments to be within range          
 1791              		.loc 1 102 0
 1792 0168 5130A0E3 		mov	r3, #81
 1793 016c 470000EA 		b	.L8
 1794              	.L9:
 103:../kernel/os_core/os_time.c ****     }
 104:../kernel/os_core/os_time.c ****     if (seconds > 59) {
 1795              		.loc 1 104 0
 1796 0170 17305BE5 		ldrb	r3, [fp, #-23]	@ zero_extendqisi2
 1797 0174 3B0053E3 		cmp	r3, #59
 1798 0178 0100009A 		bls	.L10
 105:../kernel/os_core/os_time.c ****         return (OS_TIME_INVALID_SECONDS);
 1799              		.loc 1 105 0
 1800 017c 5230A0E3 		mov	r3, #82
 1801 0180 420000EA 		b	.L8
 1802              	.L10:
 106:../kernel/os_core/os_time.c ****     }
 107:../kernel/os_core/os_time.c ****     if (milli > 999) {
 1803              		.loc 1 107 0
 1804 0184 BA215BE1 		ldrh	r2, [fp, #-26]
 1805 0188 10319FE5 		ldr	r3, .L14
 1806 018c 030052E1 		cmp	r2, r3
 1807 0190 0100009A 		bls	.L11
 108:../kernel/os_core/os_time.c ****         return (OS_TIME_INVALID_MILLI);
 1808              		.loc 1 108 0
 1809 0194 5330A0E3 		mov	r3, #83
 1810 0198 3C0000EA 		b	.L8
 1811              	.L11:
 109:../kernel/os_core/os_time.c ****     }
 110:../kernel/os_core/os_time.c **** #endif
 111:../kernel/os_core/os_time.c ****                                                  /* Compute the total number of clock ticks require
 112:../kernel/os_core/os_time.c ****                                                  /* .. (rounded to the nearest tick)               
 113:../kernel/os_core/os_time.c ****     ticks = ((INT32U)hours * 3600L + (INT32U)minutes * 60L + (INT32U)seconds) * OS_TICKS_PER_SEC
 1812              		.loc 1 113 0
 1813 019c 15205BE5 		ldrb	r2, [fp, #-21]	@ zero_extendqisi2
 1814 01a0 0230A0E1 		mov	r3, r2
 1815 01a4 0332A0E1 		mov	r3, r3, asl #4
 1816 01a8 033062E0 		rsb	r3, r2, r3
 1817 01ac 0322A0E1 		mov	r2, r3, asl #4
 1818 01b0 022063E0 		rsb	r2, r3, r2
 1819 01b4 0232A0E1 		mov	r3, r2, asl #4
 1820 01b8 0320A0E1 		mov	r2, r3
 1821 01bc 0210A0E1 		mov	r1, r2
 1822 01c0 16205BE5 		ldrb	r2, [fp, #-22]	@ zero_extendqisi2
 1823 01c4 0230A0E1 		mov	r3, r2
 1824 01c8 0332A0E1 		mov	r3, r3, asl #4
 1825 01cc 033062E0 		rsb	r3, r2, r3
 1826 01d0 0331A0E1 		mov	r3, r3, asl #2
 1827 01d4 032081E0 		add	r2, r1, r3
 1828 01d8 17305BE5 		ldrb	r3, [fp, #-23]	@ zero_extendqisi2
 1829 01dc 032082E0 		add	r2, r2, r3
 1830 01e0 0230A0E1 		mov	r3, r2
 1831 01e4 0331A0E1 		mov	r3, r3, asl #2
 1832 01e8 023083E0 		add	r3, r3, r2
 1833 01ec 0321A0E1 		mov	r2, r3, asl #2
 1834 01f0 023083E0 		add	r3, r3, r2
 1835 01f4 0331A0E1 		mov	r3, r3, asl #2
 1836 01f8 0310A0E1 		mov	r1, r3
 114:../kernel/os_core/os_time.c ****           + OS_TICKS_PER_SEC * ((INT32U)milli + 500L / OS_TICKS_PER_SEC) / 1000L;
 1837              		.loc 1 114 0
 1838 01fc BA215BE1 		ldrh	r2, [fp, #-26]
 1839 0200 0230A0E1 		mov	r3, r2
 1840 0204 0331A0E1 		mov	r3, r3, asl #2
 1841 0208 023083E0 		add	r3, r3, r2
 1842 020c 0321A0E1 		mov	r2, r3, asl #2
 1843 0210 023083E0 		add	r3, r3, r2
 1844 0214 0331A0E1 		mov	r3, r3, asl #2
 1845 0218 7D2F83E2 		add	r2, r3, #500
 1846 021c 80309FE5 		ldr	r3, .L14+4
 1847 0220 920383E0 		umull	r0, r3, r2, r3
 1848 0224 2333A0E1 		mov	r3, r3, lsr #6
 113:../kernel/os_core/os_time.c ****     ticks = ((INT32U)hours * 3600L + (INT32U)minutes * 60L + (INT32U)seconds) * OS_TICKS_PER_SEC
 1849              		.loc 1 113 0
 1850 0228 033081E0 		add	r3, r1, r3
 1851 022c 14300BE5 		str	r3, [fp, #-20]
 115:../kernel/os_core/os_time.c ****     loops = (INT16U)(ticks / 65536L);            /* Compute the integral number of 65536 tick delay
 1852              		.loc 1 115 0
 1853 0230 14301BE5 		ldr	r3, [fp, #-20]
 1854 0234 2338A0E1 		mov	r3, r3, lsr #16
 1855 0238 BE304BE1 		strh	r3, [fp, #-14]	@ movhi
 116:../kernel/os_core/os_time.c ****     ticks = ticks % 65536L;                      /* Obtain  the fractional number of ticks         
 1856              		.loc 1 116 0
 1857 023c 14301BE5 		ldr	r3, [fp, #-20]
 1858 0240 0338A0E1 		mov	r3, r3, asl #16
 1859 0244 2338A0E1 		mov	r3, r3, lsr #16
 1860 0248 14300BE5 		str	r3, [fp, #-20]
 117:../kernel/os_core/os_time.c ****     OSTimeDly((INT16U)ticks);
 1861              		.loc 1 117 0
 1862 024c 14301BE5 		ldr	r3, [fp, #-20]
 1863 0250 0338A0E1 		mov	r3, r3, asl #16
 1864 0254 2338A0E1 		mov	r3, r3, lsr #16
 1865 0258 0300A0E1 		mov	r0, r3
 1866 025c FEFFFFEB 		bl	OSTimeDly
 118:../kernel/os_core/os_time.c ****     while (loops > 0) {
 1867              		.loc 1 118 0
 1868 0260 060000EA 		b	.L12
 1869              	.L13:
 119:../kernel/os_core/os_time.c ****         OSTimeDly((INT16U)32768u);
 1870              		.loc 1 119 0
 1871 0264 0209A0E3 		mov	r0, #32768
 1872 0268 FEFFFFEB 		bl	OSTimeDly
 120:../kernel/os_core/os_time.c ****         OSTimeDly((INT16U)32768u);
 1873              		.loc 1 120 0
 1874 026c 0209A0E3 		mov	r0, #32768
 1875 0270 FEFFFFEB 		bl	OSTimeDly
 121:../kernel/os_core/os_time.c ****         loops--;
 1876              		.loc 1 121 0
 1877 0274 BE305BE1 		ldrh	r3, [fp, #-14]	@ movhi
 1878 0278 013043E2 		sub	r3, r3, #1
 1879 027c BE304BE1 		strh	r3, [fp, #-14]	@ movhi
 1880              	.L12:
 118:../kernel/os_core/os_time.c ****     while (loops > 0) {
 1881              		.loc 1 118 0 discriminator 1
 1882 0280 BE305BE1 		ldrh	r3, [fp, #-14]
 1883 0284 000053E3 		cmp	r3, #0
 1884 0288 F5FFFF1A 		bne	.L13
 122:../kernel/os_core/os_time.c ****     }
 123:../kernel/os_core/os_time.c ****     return (OS_NO_ERR);
 1885              		.loc 1 123 0
 1886 028c 0030A0E3 		mov	r3, #0
 1887              	.L8:
 124:../kernel/os_core/os_time.c **** }
 1888              		.loc 1 124 0
 1889 0290 0300A0E1 		mov	r0, r3
 1890 0294 0CD04BE2 		sub	sp, fp, #12
 1891 0298 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1892 029c 1EFF2FE1 		bx	lr
 1893              	.L15:
 1894              		.align	2
 1895              	.L14:
 1896 02a0 E7030000 		.word	999
 1897 02a4 D34D6210 		.word	274877907
 1898              		.cfi_endproc
 1899              	.LFE1:
 1901              		.align	2
 1902              		.global	OSTimeDlyResume
 1904              	OSTimeDlyResume:
 1905              	.LFB2:
 125:../kernel/os_core/os_time.c **** #endif
 126:../kernel/os_core/os_time.c **** /*$PAGE*/
 127:../kernel/os_core/os_time.c **** /*
 128:../kernel/os_core/os_time.c **** ***************************************************************************************************
 129:../kernel/os_core/os_time.c **** *                                         RESUME A DELAYED TASK
 130:../kernel/os_core/os_time.c **** *
 131:../kernel/os_core/os_time.c **** * Description: This function is used resume a task that has been delayed through a call to either
 132:../kernel/os_core/os_time.c **** *              OSTimeDly() or OSTimeDlyHMSM().  Note that you can call this function to resume a
 133:../kernel/os_core/os_time.c **** *              task that is waiting for an event with timeout.  This would make the task look
 134:../kernel/os_core/os_time.c **** *              like a timeout occurred.  
 135:../kernel/os_core/os_time.c **** *
 136:../kernel/os_core/os_time.c **** *              Also, you cannot resume a task that has called OSTimeDlyHMSM() with a combined time 
 137:../kernel/os_core/os_time.c **** *              exceeds 65535 clock ticks.  In other words, if the clock tick runs at 100 Hz then, y
 138:../kernel/os_core/os_time.c **** *              not be able to resume a delayed task that called OSTimeDlyHMSM(0, 10, 55, 350) or hi
 139:../kernel/os_core/os_time.c **** *
 140:../kernel/os_core/os_time.c **** *                  (10 Minutes * 60 + 55 Seconds + 0.35) * 100 ticks/second.
 141:../kernel/os_core/os_time.c **** *
 142:../kernel/os_core/os_time.c **** * Arguments  : prio                      specifies the priority of the task to resume
 143:../kernel/os_core/os_time.c **** *
 144:../kernel/os_core/os_time.c **** * Returns    : OS_NO_ERR                 Task has been resumed
 145:../kernel/os_core/os_time.c **** *              OS_PRIO_INVALID           if the priority you specify is higher that the maximum all
 146:../kernel/os_core/os_time.c **** *                                        (i.e. >= OS_LOWEST_PRIO)
 147:../kernel/os_core/os_time.c **** *              OS_TIME_NOT_DLY           Task is not waiting for time to expire
 148:../kernel/os_core/os_time.c **** *              OS_TASK_NOT_EXIST         The desired task has not been created or has been assigned
 149:../kernel/os_core/os_time.c **** ***************************************************************************************************
 150:../kernel/os_core/os_time.c **** */
 151:../kernel/os_core/os_time.c **** 
 152:../kernel/os_core/os_time.c **** #if OS_TIME_DLY_RESUME_EN > 0
 153:../kernel/os_core/os_time.c **** INT8U  OSTimeDlyResume (INT8U prio)
 154:../kernel/os_core/os_time.c **** {
 1906              		.loc 1 154 0
 1907              		.cfi_startproc
 1908              		@ Function supports interworking.
 1909              		@ args = 0, pretend = 0, frame = 16
 1910              		@ frame_needed = 1, uses_anonymous_args = 0
 1911 02a8 0DC0A0E1 		mov	ip, sp
 1912              	.LCFI4:
 1913              		.cfi_def_cfa_register 12
 1914 02ac 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1915 02b0 04B04CE2 		sub	fp, ip, #4
 1916              		.cfi_offset 14, -8
 1917              		.cfi_offset 13, -12
 1918              		.cfi_offset 11, -16
 1919              	.LCFI5:
 1920              		.cfi_def_cfa 11, 4
 1921 02b4 10D04DE2 		sub	sp, sp, #16
 1922 02b8 0030A0E1 		mov	r3, r0
 1923 02bc 15304BE5 		strb	r3, [fp, #-21]
 155:../kernel/os_core/os_time.c ****     OS_TCB    *ptcb;
 156:../kernel/os_core/os_time.c **** #if OS_CRITICAL_METHOD == 3                                    /* Storage for CPU status register  
 157:../kernel/os_core/os_time.c ****     OS_CPU_SR  cpu_sr;
 158:../kernel/os_core/os_time.c **** 
 159:../kernel/os_core/os_time.c **** 
 160:../kernel/os_core/os_time.c **** 
 161:../kernel/os_core/os_time.c ****     cpu_sr = 0;                                                /* Prevent compiler warning         
 162:../kernel/os_core/os_time.c **** #endif    
 163:../kernel/os_core/os_time.c ****     if (prio >= OS_LOWEST_PRIO) {
 1924              		.loc 1 163 0
 1925 02c0 15305BE5 		ldrb	r3, [fp, #-21]	@ zero_extendqisi2
 1926 02c4 3E0053E3 		cmp	r3, #62
 1927 02c8 0100009A 		bls	.L17
 164:../kernel/os_core/os_time.c ****         return (OS_PRIO_INVALID);
 1928              		.loc 1 164 0
 1929 02cc 2A30A0E3 		mov	r3, #42
 1930 02d0 520000EA 		b	.L18
 1931              	.L17:
 165:../kernel/os_core/os_time.c ****     }
 166:../kernel/os_core/os_time.c ****     OS_ENTER_CRITICAL();
 1932              		.loc 1 166 0
 1933              	@ 166 "../kernel/os_core/os_time.c" 1
 1934 02d4 00000FE1 		mrs   r0, cpsr
 1935              	@ 0 "" 2
 1936              	@ 166 "../kernel/os_core/os_time.c" 1
 1937 02d8 04002DE5 		stmfd sp!, {r0}
 1938              	@ 0 "" 2
 1939              	@ 166 "../kernel/os_core/os_time.c" 1
 1940 02dc C00080E3 		orr   r0, r0, #0b11000000
 1941              	@ 0 "" 2
 1942              	@ 166 "../kernel/os_core/os_time.c" 1
 1943 02e0 00F021E1 		msr   cpsr_c, r0
 1944              	@ 0 "" 2
 167:../kernel/os_core/os_time.c ****     ptcb = (OS_TCB *)OSTCBPrioTbl[prio];                       /* Make sure that task exist        
 1945              		.loc 1 167 0
 1946 02e4 15205BE5 		ldrb	r2, [fp, #-21]	@ zero_extendqisi2
 1947 02e8 40319FE5 		ldr	r3, .L26
 1948 02ec 023193E7 		ldr	r3, [r3, r2, asl #2]
 1949 02f0 10300BE5 		str	r3, [fp, #-16]
 168:../kernel/os_core/os_time.c ****     if (ptcb == (OS_TCB *)0) {
 1950              		.loc 1 168 0
 1951 02f4 10301BE5 		ldr	r3, [fp, #-16]
 1952 02f8 000053E3 		cmp	r3, #0
 1953 02fc 0300001A 		bne	.L19
 169:../kernel/os_core/os_time.c ****         OS_EXIT_CRITICAL();
 1954              		.loc 1 169 0
 1955              	@ 169 "../kernel/os_core/os_time.c" 1
 1956 0300 04009DE4 		ldmfd sp!, {r0}
 1957              	@ 0 "" 2
 1958              	@ 169 "../kernel/os_core/os_time.c" 1
 1959 0304 00F021E1 		msr   cpsr_c, r0
 1960              	@ 0 "" 2
 170:../kernel/os_core/os_time.c ****         return (OS_TASK_NOT_EXIST);                            /* The task does not exist          
 1961              		.loc 1 170 0
 1962 0308 0B30A0E3 		mov	r3, #11
 1963 030c 430000EA 		b	.L18
 1964              	.L19:
 171:../kernel/os_core/os_time.c ****     }
 172:../kernel/os_core/os_time.c ****     if (ptcb == (OS_TCB *)1) {
 1965              		.loc 1 172 0
 1966 0310 10301BE5 		ldr	r3, [fp, #-16]
 1967 0314 010053E3 		cmp	r3, #1
 1968 0318 0300001A 		bne	.L20
 173:../kernel/os_core/os_time.c ****         OS_EXIT_CRITICAL();
 1969              		.loc 1 173 0
 1970              	@ 173 "../kernel/os_core/os_time.c" 1
 1971 031c 04009DE4 		ldmfd sp!, {r0}
 1972              	@ 0 "" 2
 1973              	@ 173 "../kernel/os_core/os_time.c" 1
 1974 0320 00F021E1 		msr   cpsr_c, r0
 1975              	@ 0 "" 2
 174:../kernel/os_core/os_time.c ****         return (OS_TASK_NOT_EXIST);                            /* The task does not exist          
 1976              		.loc 1 174 0
 1977 0324 0B30A0E3 		mov	r3, #11
 1978 0328 3C0000EA 		b	.L18
 1979              	.L20:
 175:../kernel/os_core/os_time.c ****     }
 176:../kernel/os_core/os_time.c ****     if (ptcb->OSTCBDly == 0) {                                 /* See if task is delayed           
 1980              		.loc 1 176 0
 1981 032c 10301BE5 		ldr	r3, [fp, #-16]
 1982 0330 BA32D3E1 		ldrh	r3, [r3, #42]
 1983 0334 000053E3 		cmp	r3, #0
 1984 0338 0300001A 		bne	.L21
 177:../kernel/os_core/os_time.c ****         OS_EXIT_CRITICAL();
 1985              		.loc 1 177 0
 1986              	@ 177 "../kernel/os_core/os_time.c" 1
 1987 033c 04009DE4 		ldmfd sp!, {r0}
 1988              	@ 0 "" 2
 1989              	@ 177 "../kernel/os_core/os_time.c" 1
 1990 0340 00F021E1 		msr   cpsr_c, r0
 1991              	@ 0 "" 2
 178:../kernel/os_core/os_time.c ****         return (OS_TIME_NOT_DLY);                              /* Indicate that task was not delaye
 1992              		.loc 1 178 0
 1993 0344 5030A0E3 		mov	r3, #80
 1994 0348 340000EA 		b	.L18
 1995              	.L21:
 179:../kernel/os_core/os_time.c ****     }
 180:../kernel/os_core/os_time.c **** 
 181:../kernel/os_core/os_time.c ****     ptcb->OSTCBDly = 0;                                        /* Clear the time delay             
 1996              		.loc 1 181 0
 1997 034c 10301BE5 		ldr	r3, [fp, #-16]
 1998 0350 0020A0E3 		mov	r2, #0
 1999 0354 BA22C3E1 		strh	r2, [r3, #42]	@ movhi
 182:../kernel/os_core/os_time.c ****     if ((ptcb->OSTCBStat & OS_STAT_PEND_ANY) != OS_STAT_RDY) {
 2000              		.loc 1 182 0
 2001 0358 10301BE5 		ldr	r3, [fp, #-16]
 2002 035c 2C30D3E5 		ldrb	r3, [r3, #44]	@ zero_extendqisi2
 2003 0360 373003E2 		and	r3, r3, #55
 2004 0364 000053E3 		cmp	r3, #0
 2005 0368 0900000A 		beq	.L22
 183:../kernel/os_core/os_time.c ****         ptcb->OSTCBStat   &= ~OS_STAT_PEND_ANY;                /* Yes, Clear status flag           
 2006              		.loc 1 183 0
 2007 036c 10301BE5 		ldr	r3, [fp, #-16]
 2008 0370 2C30D3E5 		ldrb	r3, [r3, #44]	@ zero_extendqisi2
 2009 0374 3730C3E3 		bic	r3, r3, #55
 2010 0378 FF2003E2 		and	r2, r3, #255
 2011 037c 10301BE5 		ldr	r3, [fp, #-16]
 2012 0380 2C20C3E5 		strb	r2, [r3, #44]
 184:../kernel/os_core/os_time.c ****         ptcb->OSTCBPendTO  = TRUE;                             /* Indicate PEND timeout            
 2013              		.loc 1 184 0
 2014 0384 10301BE5 		ldr	r3, [fp, #-16]
 2015 0388 0120A0E3 		mov	r2, #1
 2016 038c 2D20C3E5 		strb	r2, [r3, #45]
 2017 0390 020000EA 		b	.L23
 2018              	.L22:
 185:../kernel/os_core/os_time.c ****     } else {
 186:../kernel/os_core/os_time.c ****         ptcb->OSTCBPendTO  = FALSE;
 2019              		.loc 1 186 0
 2020 0394 10301BE5 		ldr	r3, [fp, #-16]
 2021 0398 0020A0E3 		mov	r2, #0
 2022 039c 2D20C3E5 		strb	r2, [r3, #45]
 2023              	.L23:
 187:../kernel/os_core/os_time.c ****     }
 188:../kernel/os_core/os_time.c ****     if ((ptcb->OSTCBStat & OS_STAT_SUSPEND) == OS_STAT_RDY) {  /* Is task suspended?               
 2024              		.loc 1 188 0
 2025 03a0 10301BE5 		ldr	r3, [fp, #-16]
 2026 03a4 2C30D3E5 		ldrb	r3, [r3, #44]	@ zero_extendqisi2
 2027 03a8 083003E2 		and	r3, r3, #8
 2028 03ac 000053E3 		cmp	r3, #0
 2029 03b0 1700001A 		bne	.L24
 189:../kernel/os_core/os_time.c ****         OSRdyGrp               |= ptcb->OSTCBBitY;             /* No,  Make ready                  
 2030              		.loc 1 189 0
 2031 03b4 10301BE5 		ldr	r3, [fp, #-16]
 2032 03b8 3220D3E5 		ldrb	r2, [r3, #50]	@ zero_extendqisi2
 2033 03bc 70309FE5 		ldr	r3, .L26+4
 2034 03c0 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2035 03c4 033082E1 		orr	r3, r2, r3
 2036 03c8 FF2003E2 		and	r2, r3, #255
 2037 03cc 60309FE5 		ldr	r3, .L26+4
 2038 03d0 0020C3E5 		strb	r2, [r3, #0]
 190:../kernel/os_core/os_time.c ****         OSRdyTbl[ptcb->OSTCBY] |= ptcb->OSTCBBitX;
 2039              		.loc 1 190 0
 2040 03d4 10301BE5 		ldr	r3, [fp, #-16]
 2041 03d8 3030D3E5 		ldrb	r3, [r3, #48]	@ zero_extendqisi2
 2042 03dc 10201BE5 		ldr	r2, [fp, #-16]
 2043 03e0 3020D2E5 		ldrb	r2, [r2, #48]	@ zero_extendqisi2
 2044 03e4 4C109FE5 		ldr	r1, .L26+8
 2045 03e8 0210D1E7 		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 2046 03ec 10201BE5 		ldr	r2, [fp, #-16]
 2047 03f0 3120D2E5 		ldrb	r2, [r2, #49]	@ zero_extendqisi2
 2048 03f4 022081E1 		orr	r2, r1, r2
 2049 03f8 FF1002E2 		and	r1, r2, #255
 2050 03fc 34209FE5 		ldr	r2, .L26+8
 2051 0400 0310C2E7 		strb	r1, [r2, r3]
 191:../kernel/os_core/os_time.c ****         OS_EXIT_CRITICAL();
 2052              		.loc 1 191 0
 2053              	@ 191 "../kernel/os_core/os_time.c" 1
 2054 0404 04009DE4 		ldmfd sp!, {r0}
 2055              	@ 0 "" 2
 2056              	@ 191 "../kernel/os_core/os_time.c" 1
 2057 0408 00F021E1 		msr   cpsr_c, r0
 2058              	@ 0 "" 2
 192:../kernel/os_core/os_time.c ****         OS_Sched();                                           /* See if this is new highest priorit
 2059              		.loc 1 192 0
 2060 040c FEFFFFEB 		bl	OS_Sched
 2061 0410 010000EA 		b	.L25
 2062              	.L24:
 193:../kernel/os_core/os_time.c ****     } else {
 194:../kernel/os_core/os_time.c ****         OS_EXIT_CRITICAL();                                   /* Task may be suspended             
 2063              		.loc 1 194 0
 2064              	@ 194 "../kernel/os_core/os_time.c" 1
 2065 0414 04009DE4 		ldmfd sp!, {r0}
 2066              	@ 0 "" 2
 2067              	@ 194 "../kernel/os_core/os_time.c" 1
 2068 0418 00F021E1 		msr   cpsr_c, r0
 2069              	@ 0 "" 2
 2070              	.L25:
 195:../kernel/os_core/os_time.c ****     }
 196:../kernel/os_core/os_time.c ****     return (OS_NO_ERR);
 2071              		.loc 1 196 0
 2072 041c 0030A0E3 		mov	r3, #0
 2073              	.L18:
 197:../kernel/os_core/os_time.c **** }
 2074              		.loc 1 197 0
 2075 0420 0300A0E1 		mov	r0, r3
 2076 0424 0CD04BE2 		sub	sp, fp, #12
 2077 0428 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2078 042c 1EFF2FE1 		bx	lr
 2079              	.L27:
 2080              		.align	2
 2081              	.L26:
 2082 0430 00000000 		.word	OSTCBPrioTbl
 2083 0434 00000000 		.word	OSRdyGrp
 2084 0438 00000000 		.word	OSRdyTbl
 2085              		.cfi_endproc
 2086              	.LFE2:
 2088              		.align	2
 2089              		.global	OSTimeGet
 2091              	OSTimeGet:
 2092              	.LFB3:
 198:../kernel/os_core/os_time.c **** #endif    
 199:../kernel/os_core/os_time.c **** /*$PAGE*/
 200:../kernel/os_core/os_time.c **** /*
 201:../kernel/os_core/os_time.c **** ***************************************************************************************************
 202:../kernel/os_core/os_time.c **** *                                         GET CURRENT SYSTEM TIME
 203:../kernel/os_core/os_time.c **** *
 204:../kernel/os_core/os_time.c **** * Description: This function is used by your application to obtain the current value of the 32-bit
 205:../kernel/os_core/os_time.c **** *              counter which keeps track of the number of clock ticks.
 206:../kernel/os_core/os_time.c **** *
 207:../kernel/os_core/os_time.c **** * Arguments  : none
 208:../kernel/os_core/os_time.c **** *
 209:../kernel/os_core/os_time.c **** * Returns    : The current value of OSTime
 210:../kernel/os_core/os_time.c **** ***************************************************************************************************
 211:../kernel/os_core/os_time.c **** */
 212:../kernel/os_core/os_time.c **** 
 213:../kernel/os_core/os_time.c **** #if OS_TIME_GET_SET_EN > 0
 214:../kernel/os_core/os_time.c **** INT32U  OSTimeGet (void)
 215:../kernel/os_core/os_time.c **** {
 2093              		.loc 1 215 0
 2094              		.cfi_startproc
 2095              		@ Function supports interworking.
 2096              		@ args = 0, pretend = 0, frame = 8
 2097              		@ frame_needed = 1, uses_anonymous_args = 0
 2098 043c 0DC0A0E1 		mov	ip, sp
 2099              	.LCFI6:
 2100              		.cfi_def_cfa_register 12
 2101 0440 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2102 0444 04B04CE2 		sub	fp, ip, #4
 2103              		.cfi_offset 14, -8
 2104              		.cfi_offset 13, -12
 2105              		.cfi_offset 11, -16
 2106              	.LCFI7:
 2107              		.cfi_def_cfa 11, 4
 2108 0448 08D04DE2 		sub	sp, sp, #8
 216:../kernel/os_core/os_time.c ****     INT32U     ticks;
 217:../kernel/os_core/os_time.c **** #if OS_CRITICAL_METHOD == 3                      /* Allocate storage for CPU status register       
 218:../kernel/os_core/os_time.c ****     OS_CPU_SR  cpu_sr;
 219:../kernel/os_core/os_time.c **** 
 220:../kernel/os_core/os_time.c **** 
 221:../kernel/os_core/os_time.c **** 
 222:../kernel/os_core/os_time.c ****     cpu_sr = 0;                                  /* Prevent compiler warning                       
 223:../kernel/os_core/os_time.c **** #endif    
 224:../kernel/os_core/os_time.c ****     OS_ENTER_CRITICAL();
 2109              		.loc 1 224 0
 2110              	@ 224 "../kernel/os_core/os_time.c" 1
 2111 044c 00000FE1 		mrs   r0, cpsr
 2112              	@ 0 "" 2
 2113              	@ 224 "../kernel/os_core/os_time.c" 1
 2114 0450 04002DE5 		stmfd sp!, {r0}
 2115              	@ 0 "" 2
 2116              	@ 224 "../kernel/os_core/os_time.c" 1
 2117 0454 C00080E3 		orr   r0, r0, #0b11000000
 2118              	@ 0 "" 2
 2119              	@ 224 "../kernel/os_core/os_time.c" 1
 2120 0458 00F021E1 		msr   cpsr_c, r0
 2121              	@ 0 "" 2
 225:../kernel/os_core/os_time.c ****     ticks = OSTime;
 2122              		.loc 1 225 0
 2123 045c 20309FE5 		ldr	r3, .L29
 2124 0460 003093E5 		ldr	r3, [r3, #0]
 2125 0464 10300BE5 		str	r3, [fp, #-16]
 226:../kernel/os_core/os_time.c ****     OS_EXIT_CRITICAL();
 2126              		.loc 1 226 0
 2127              	@ 226 "../kernel/os_core/os_time.c" 1
 2128 0468 04009DE4 		ldmfd sp!, {r0}
 2129              	@ 0 "" 2
 2130              	@ 226 "../kernel/os_core/os_time.c" 1
 2131 046c 00F021E1 		msr   cpsr_c, r0
 2132              	@ 0 "" 2
 227:../kernel/os_core/os_time.c ****     return (ticks);
 2133              		.loc 1 227 0
 2134 0470 10301BE5 		ldr	r3, [fp, #-16]
 228:../kernel/os_core/os_time.c **** }
 2135              		.loc 1 228 0
 2136 0474 0300A0E1 		mov	r0, r3
 2137 0478 0CD04BE2 		sub	sp, fp, #12
 2138 047c 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2139 0480 1EFF2FE1 		bx	lr
 2140              	.L30:
 2141              		.align	2
 2142              	.L29:
 2143 0484 00000000 		.word	OSTime
 2144              		.cfi_endproc
 2145              	.LFE3:
 2147              		.align	2
 2148              		.global	OSTimeSet
 2150              	OSTimeSet:
 2151              	.LFB4:
 229:../kernel/os_core/os_time.c **** #endif    
 230:../kernel/os_core/os_time.c **** 
 231:../kernel/os_core/os_time.c **** /*
 232:../kernel/os_core/os_time.c **** ***************************************************************************************************
 233:../kernel/os_core/os_time.c **** *                                            SET SYSTEM CLOCK
 234:../kernel/os_core/os_time.c **** *
 235:../kernel/os_core/os_time.c **** * Description: This function sets the 32-bit counter which keeps track of the number of clock ticks
 236:../kernel/os_core/os_time.c **** *
 237:../kernel/os_core/os_time.c **** * Arguments  : ticks      specifies the new value that OSTime needs to take.
 238:../kernel/os_core/os_time.c **** *
 239:../kernel/os_core/os_time.c **** * Returns    : none
 240:../kernel/os_core/os_time.c **** ***************************************************************************************************
 241:../kernel/os_core/os_time.c **** */
 242:../kernel/os_core/os_time.c **** 
 243:../kernel/os_core/os_time.c **** #if OS_TIME_GET_SET_EN > 0
 244:../kernel/os_core/os_time.c **** void  OSTimeSet (INT32U ticks)
 245:../kernel/os_core/os_time.c **** {
 2152              		.loc 1 245 0
 2153              		.cfi_startproc
 2154              		@ Function supports interworking.
 2155              		@ args = 0, pretend = 0, frame = 8
 2156              		@ frame_needed = 1, uses_anonymous_args = 0
 2157 0488 0DC0A0E1 		mov	ip, sp
 2158              	.LCFI8:
 2159              		.cfi_def_cfa_register 12
 2160 048c 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2161 0490 04B04CE2 		sub	fp, ip, #4
 2162              		.cfi_offset 14, -8
 2163              		.cfi_offset 13, -12
 2164              		.cfi_offset 11, -16
 2165              	.LCFI9:
 2166              		.cfi_def_cfa 11, 4
 2167 0494 08D04DE2 		sub	sp, sp, #8
 2168 0498 10000BE5 		str	r0, [fp, #-16]
 246:../kernel/os_core/os_time.c **** #if OS_CRITICAL_METHOD == 3                      /* Allocate storage for CPU status register       
 247:../kernel/os_core/os_time.c ****     OS_CPU_SR  cpu_sr;
 248:../kernel/os_core/os_time.c **** 
 249:../kernel/os_core/os_time.c **** 
 250:../kernel/os_core/os_time.c **** 
 251:../kernel/os_core/os_time.c ****     cpu_sr = 0;                                  /* Prevent compiler warning                       
 252:../kernel/os_core/os_time.c **** #endif    
 253:../kernel/os_core/os_time.c ****     OS_ENTER_CRITICAL();
 2169              		.loc 1 253 0
 2170              	@ 253 "../kernel/os_core/os_time.c" 1
 2171 049c 00000FE1 		mrs   r0, cpsr
 2172              	@ 0 "" 2
 2173              	@ 253 "../kernel/os_core/os_time.c" 1
 2174 04a0 04002DE5 		stmfd sp!, {r0}
 2175              	@ 0 "" 2
 2176              	@ 253 "../kernel/os_core/os_time.c" 1
 2177 04a4 C00080E3 		orr   r0, r0, #0b11000000
 2178              	@ 0 "" 2
 2179              	@ 253 "../kernel/os_core/os_time.c" 1
 2180 04a8 00F021E1 		msr   cpsr_c, r0
 2181              	@ 0 "" 2
 254:../kernel/os_core/os_time.c ****     OSTime = ticks;
 2182              		.loc 1 254 0
 2183 04ac 18309FE5 		ldr	r3, .L32
 2184 04b0 10201BE5 		ldr	r2, [fp, #-16]
 2185 04b4 002083E5 		str	r2, [r3, #0]
 255:../kernel/os_core/os_time.c ****     OS_EXIT_CRITICAL();
 2186              		.loc 1 255 0
 2187              	@ 255 "../kernel/os_core/os_time.c" 1
 2188 04b8 04009DE4 		ldmfd sp!, {r0}
 2189              	@ 0 "" 2
 2190              	@ 255 "../kernel/os_core/os_time.c" 1
 2191 04bc 00F021E1 		msr   cpsr_c, r0
 2192              	@ 0 "" 2
 256:../kernel/os_core/os_time.c **** }
 2193              		.loc 1 256 0
 2194 04c0 0CD04BE2 		sub	sp, fp, #12
 2195 04c4 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2196 04c8 1EFF2FE1 		bx	lr
 2197              	.L33:
 2198              		.align	2
 2199              	.L32:
 2200 04cc 00000000 		.word	OSTime
 2201              		.cfi_endproc
 2202              	.LFE4:
 2204              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 os_time.c
C:\Users\Pedro\AppData\Local\Temp\ccpBU9LX.s:1630   .text:00000000 $a
C:\Users\Pedro\AppData\Local\Temp\ccpBU9LX.s:1633   .text:00000000 OSTimeDly
C:\Users\Pedro\AppData\Local\Temp\ccpBU9LX.s:1736   .text:000000f8 $d
C:\Users\Pedro\AppData\Local\Temp\ccpBU9LX.s:1742   .text:00000104 $a
C:\Users\Pedro\AppData\Local\Temp\ccpBU9LX.s:1745   .text:00000104 OSTimeDlyHMSM
C:\Users\Pedro\AppData\Local\Temp\ccpBU9LX.s:1896   .text:000002a0 $d
C:\Users\Pedro\AppData\Local\Temp\ccpBU9LX.s:1901   .text:000002a8 $a
C:\Users\Pedro\AppData\Local\Temp\ccpBU9LX.s:1904   .text:000002a8 OSTimeDlyResume
C:\Users\Pedro\AppData\Local\Temp\ccpBU9LX.s:2082   .text:00000430 $d
C:\Users\Pedro\AppData\Local\Temp\ccpBU9LX.s:2088   .text:0000043c $a
C:\Users\Pedro\AppData\Local\Temp\ccpBU9LX.s:2091   .text:0000043c OSTimeGet
C:\Users\Pedro\AppData\Local\Temp\ccpBU9LX.s:2143   .text:00000484 $d
C:\Users\Pedro\AppData\Local\Temp\ccpBU9LX.s:2147   .text:00000488 $a
C:\Users\Pedro\AppData\Local\Temp\ccpBU9LX.s:2150   .text:00000488 OSTimeSet
C:\Users\Pedro\AppData\Local\Temp\ccpBU9LX.s:2200   .text:000004cc $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
OS_Sched
OSTCBCur
OSRdyTbl
OSRdyGrp
OSTCBPrioTbl
OSTime
