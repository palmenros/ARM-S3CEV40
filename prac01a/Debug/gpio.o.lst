   1              		.cpu arm7tdmi
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 18, 4
  11              		.file	"gpio.c"
  21              	.Ltext0:
  22              		.file 1 "../gpio.c"
 1698              		.align	2
 1699              		.global	portB_conf
 1701              	portB_conf:
 1702              	.LFB0:
   1:../gpio.c     **** #include "44b.h"
   2:../gpio.c     **** #include "gpio.h"
   3:../gpio.c     **** 
   4:../gpio.c     **** /* Port B interface implementation */
   5:../gpio.c     **** 
   6:../gpio.c     **** int portB_conf(int pin, enum port_mode mode)
   7:../gpio.c     **** {
 1703              		.loc 1 7 0
 1704              		.cfi_startproc
 1705              		@ Function supports interworking.
 1706              		@ args = 0, pretend = 0, frame = 16
 1707              		@ frame_needed = 1, uses_anonymous_args = 0
 1708 0000 0DC0A0E1 		mov	ip, sp
 1709              	.LCFI0:
 1710              		.cfi_def_cfa_register 12
 1711 0004 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1712 0008 04B04CE2 		sub	fp, ip, #4
 1713              		.cfi_offset 14, -8
 1714              		.cfi_offset 13, -12
 1715              		.cfi_offset 11, -16
 1716              	.LCFI1:
 1717              		.cfi_def_cfa 11, 4
 1718 000c 10D04DE2 		sub	sp, sp, #16
 1719 0010 18000BE5 		str	r0, [fp, #-24]
 1720 0014 0130A0E1 		mov	r3, r1
 1721 0018 19304BE5 		strb	r3, [fp, #-25]
   8:../gpio.c     **** 	int ret = 0;
 1722              		.loc 1 8 0
 1723 001c 0030A0E3 		mov	r3, #0
 1724 0020 10300BE5 		str	r3, [fp, #-16]
   9:../gpio.c     **** 	if (pin < 0 || pin > 10)
 1725              		.loc 1 9 0
 1726 0024 18301BE5 		ldr	r3, [fp, #-24]
 1727 0028 000053E3 		cmp	r3, #0
 1728 002c 020000BA 		blt	.L2
 1729              		.loc 1 9 0 is_stmt 0 discriminator 1
 1730 0030 18301BE5 		ldr	r3, [fp, #-24]
 1731 0034 0A0053E3 		cmp	r3, #10
 1732 0038 010000DA 		ble	.L3
 1733              	.L2:
  10:../gpio.c     **** 		return -1; // indica error
 1734              		.loc 1 10 0 is_stmt 1
 1735 003c 0030E0E3 		mvn	r3, #0
 1736 0040 1B0000EA 		b	.L4
 1737              	.L3:
  11:../gpio.c     **** 
  12:../gpio.c     **** 	if (mode == SIGOUT)
 1738              		.loc 1 12 0
 1739 0044 19305BE5 		ldrb	r3, [fp, #-25]	@ zero_extendqisi2
 1740 0048 020053E3 		cmp	r3, #2
 1741 004c 0800001A 		bne	.L5
  13:../gpio.c     **** 		// COMPLETAR: poner en rPCONB el bit indicado por pin a 1 para que por
  14:../gpio.c     **** 		// dicho pin en el puerto B salga la seÃ±al correspondiente del
  15:../gpio.c     **** 		// controlador de memoria
  16:../gpio.c     **** 		rPCONB |= 1 << pin;
 1742              		.loc 1 16 0
 1743 0050 6C309FE5 		ldr	r3, .L8
 1744 0054 68209FE5 		ldr	r2, .L8
 1745 0058 001092E5 		ldr	r1, [r2, #0]
 1746 005c 0100A0E3 		mov	r0, #1
 1747 0060 18201BE5 		ldr	r2, [fp, #-24]
 1748 0064 1022A0E1 		mov	r2, r0, asl r2
 1749 0068 022081E1 		orr	r2, r1, r2
 1750 006c 002083E5 		str	r2, [r3, #0]
 1751 0070 0E0000EA 		b	.L6
 1752              	.L5:
  17:../gpio.c     **** 	else if (mode == OUTPUT)
 1753              		.loc 1 17 0
 1754 0074 19305BE5 		ldrb	r3, [fp, #-25]	@ zero_extendqisi2
 1755 0078 010053E3 		cmp	r3, #1
 1756 007c 0900001A 		bne	.L7
  18:../gpio.c     **** 		// COMPLETAR: poner en rPCONB el bit indicado por pin a 0 para que dicho
  19:../gpio.c     **** 		// pin sea un pin de salida
  20:../gpio.c     **** 		rPCONB &= ~(1 << pin);
 1757              		.loc 1 20 0
 1758 0080 3C309FE5 		ldr	r3, .L8
 1759 0084 38209FE5 		ldr	r2, .L8
 1760 0088 001092E5 		ldr	r1, [r2, #0]
 1761 008c 0100A0E3 		mov	r0, #1
 1762 0090 18201BE5 		ldr	r2, [fp, #-24]
 1763 0094 1022A0E1 		mov	r2, r0, asl r2
 1764 0098 0220E0E1 		mvn	r2, r2
 1765 009c 022001E0 		and	r2, r1, r2
 1766 00a0 002083E5 		str	r2, [r3, #0]
 1767 00a4 010000EA 		b	.L6
 1768              	.L7:
  21:../gpio.c     **** 	else
  22:../gpio.c     **** 		ret = -1; // indica error
 1769              		.loc 1 22 0
 1770 00a8 0030E0E3 		mvn	r3, #0
 1771 00ac 10300BE5 		str	r3, [fp, #-16]
 1772              	.L6:
  23:../gpio.c     **** 
  24:../gpio.c     **** 	return ret;
 1773              		.loc 1 24 0
 1774 00b0 10301BE5 		ldr	r3, [fp, #-16]
 1775              	.L4:
  25:../gpio.c     **** }
 1776              		.loc 1 25 0
 1777 00b4 0300A0E1 		mov	r0, r3
 1778 00b8 0CD04BE2 		sub	sp, fp, #12
 1779 00bc 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1780 00c0 1EFF2FE1 		bx	lr
 1781              	.L9:
 1782              		.align	2
 1783              	.L8:
 1784 00c4 0800D201 		.word	30539784
 1785              		.cfi_endproc
 1786              	.LFE0:
 1788              		.align	2
 1789              		.global	portB_write
 1791              	portB_write:
 1792              	.LFB1:
  26:../gpio.c     **** 
  27:../gpio.c     **** int portB_write(int pin, enum digital val)
  28:../gpio.c     **** {
 1793              		.loc 1 28 0
 1794              		.cfi_startproc
 1795              		@ Function supports interworking.
 1796              		@ args = 0, pretend = 0, frame = 8
 1797              		@ frame_needed = 1, uses_anonymous_args = 0
 1798 00c8 0DC0A0E1 		mov	ip, sp
 1799              	.LCFI2:
 1800              		.cfi_def_cfa_register 12
 1801 00cc 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1802 00d0 04B04CE2 		sub	fp, ip, #4
 1803              		.cfi_offset 14, -8
 1804              		.cfi_offset 13, -12
 1805              		.cfi_offset 11, -16
 1806              	.LCFI3:
 1807              		.cfi_def_cfa 11, 4
 1808 00d4 08D04DE2 		sub	sp, sp, #8
 1809 00d8 10000BE5 		str	r0, [fp, #-16]
 1810 00dc 0130A0E1 		mov	r3, r1
 1811 00e0 11304BE5 		strb	r3, [fp, #-17]
  29:../gpio.c     **** 	if (pin < 0 || pin > 10)
 1812              		.loc 1 29 0
 1813 00e4 10301BE5 		ldr	r3, [fp, #-16]
 1814 00e8 000053E3 		cmp	r3, #0
 1815 00ec 020000BA 		blt	.L11
 1816              		.loc 1 29 0 is_stmt 0 discriminator 1
 1817 00f0 10301BE5 		ldr	r3, [fp, #-16]
 1818 00f4 0A0053E3 		cmp	r3, #10
 1819 00f8 010000DA 		ble	.L12
 1820              	.L11:
  30:../gpio.c     **** 		return -1; // indica error
 1821              		.loc 1 30 0 is_stmt 1
 1822 00fc 0030E0E3 		mvn	r3, #0
 1823 0100 1A0000EA 		b	.L13
 1824              	.L12:
  31:../gpio.c     **** 
  32:../gpio.c     **** 	if (val < 0 || val > 1)
 1825              		.loc 1 32 0
 1826 0104 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 1827 0108 010053E3 		cmp	r3, #1
 1828 010c 0100009A 		bls	.L14
  33:../gpio.c     **** 		return -1; // indica error
 1829              		.loc 1 33 0
 1830 0110 0030E0E3 		mvn	r3, #0
 1831 0114 150000EA 		b	.L13
 1832              	.L14:
  34:../gpio.c     **** 
  35:../gpio.c     **** 	if (val)
 1833              		.loc 1 35 0
 1834 0118 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 1835 011c 000053E3 		cmp	r3, #0
 1836 0120 0800000A 		beq	.L15
  36:../gpio.c     **** 		// COMPLETAR: poner en rPDATB el bit indicado por pin a 1
  37:../gpio.c     **** 		rPDATB |= 1 << pin;
 1837              		.loc 1 37 0
 1838 0124 54309FE5 		ldr	r3, .L17
 1839 0128 50209FE5 		ldr	r2, .L17
 1840 012c 001092E5 		ldr	r1, [r2, #0]
 1841 0130 0100A0E3 		mov	r0, #1
 1842 0134 10201BE5 		ldr	r2, [fp, #-16]
 1843 0138 1022A0E1 		mov	r2, r0, asl r2
 1844 013c 022081E1 		orr	r2, r1, r2
 1845 0140 002083E5 		str	r2, [r3, #0]
 1846 0144 080000EA 		b	.L16
 1847              	.L15:
  38:../gpio.c     **** 	else
  39:../gpio.c     **** 		// COMPLETAR: poner en rPDATB el bit indicado por pin a 0
  40:../gpio.c     **** 		rPDATB &= ~(1 << pin);
 1848              		.loc 1 40 0
 1849 0148 30309FE5 		ldr	r3, .L17
 1850 014c 2C209FE5 		ldr	r2, .L17
 1851 0150 001092E5 		ldr	r1, [r2, #0]
 1852 0154 0100A0E3 		mov	r0, #1
 1853 0158 10201BE5 		ldr	r2, [fp, #-16]
 1854 015c 1022A0E1 		mov	r2, r0, asl r2
 1855 0160 0220E0E1 		mvn	r2, r2
 1856 0164 022001E0 		and	r2, r1, r2
 1857 0168 002083E5 		str	r2, [r3, #0]
 1858              	.L16:
  41:../gpio.c     **** 
  42:../gpio.c     **** 	return 0;
 1859              		.loc 1 42 0
 1860 016c 0030A0E3 		mov	r3, #0
 1861              	.L13:
  43:../gpio.c     **** }
 1862              		.loc 1 43 0
 1863 0170 0300A0E1 		mov	r0, r3
 1864 0174 0CD04BE2 		sub	sp, fp, #12
 1865 0178 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1866 017c 1EFF2FE1 		bx	lr
 1867              	.L18:
 1868              		.align	2
 1869              	.L17:
 1870 0180 0C00D201 		.word	30539788
 1871              		.cfi_endproc
 1872              	.LFE1:
 1874              		.align	2
 1875              		.global	portG_conf
 1877              	portG_conf:
 1878              	.LFB2:
  44:../gpio.c     **** 
  45:../gpio.c     **** /* Port G interface implementation */
  46:../gpio.c     **** 
  47:../gpio.c     **** int portG_conf(int pin, enum port_mode mode)
  48:../gpio.c     **** {
 1879              		.loc 1 48 0
 1880              		.cfi_startproc
 1881              		@ Function supports interworking.
 1882              		@ args = 0, pretend = 0, frame = 16
 1883              		@ frame_needed = 1, uses_anonymous_args = 0
 1884 0184 0DC0A0E1 		mov	ip, sp
 1885              	.LCFI4:
 1886              		.cfi_def_cfa_register 12
 1887 0188 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1888 018c 04B04CE2 		sub	fp, ip, #4
 1889              		.cfi_offset 14, -8
 1890              		.cfi_offset 13, -12
 1891              		.cfi_offset 11, -16
 1892              	.LCFI5:
 1893              		.cfi_def_cfa 11, 4
 1894 0190 10D04DE2 		sub	sp, sp, #16
 1895 0194 18000BE5 		str	r0, [fp, #-24]
 1896 0198 0130A0E1 		mov	r3, r1
 1897 019c 19304BE5 		strb	r3, [fp, #-25]
  49:../gpio.c     **** 	int pos  = pin*2;
 1898              		.loc 1 49 0
 1899 01a0 18301BE5 		ldr	r3, [fp, #-24]
 1900 01a4 8330A0E1 		mov	r3, r3, asl #1
 1901 01a8 10300BE5 		str	r3, [fp, #-16]
  50:../gpio.c     **** 
  51:../gpio.c     **** 	if (pin < 0 || pin > 7)
 1902              		.loc 1 51 0
 1903 01ac 18301BE5 		ldr	r3, [fp, #-24]
 1904 01b0 000053E3 		cmp	r3, #0
 1905 01b4 020000BA 		blt	.L20
 1906              		.loc 1 51 0 is_stmt 0 discriminator 1
 1907 01b8 18301BE5 		ldr	r3, [fp, #-24]
 1908 01bc 070053E3 		cmp	r3, #7
 1909 01c0 010000DA 		ble	.L21
 1910              	.L20:
  52:../gpio.c     **** 		return -1; // indica error
 1911              		.loc 1 52 0 is_stmt 1
 1912 01c4 0030E0E3 		mvn	r3, #0
 1913 01c8 560000EA 		b	.L22
 1914              	.L21:
  53:../gpio.c     **** 
  54:../gpio.c     **** 	switch (mode) {
 1915              		.loc 1 54 0
 1916 01cc 19305BE5 		ldrb	r3, [fp, #-25]	@ zero_extendqisi2
 1917 01d0 030053E3 		cmp	r3, #3
 1918 01d4 03F19F97 		ldrls	pc, [pc, r3, asl #2]
 1919 01d8 4F0000EA 		b	.L23
 1920              	.L28:
 1921 01dc EC010000 		.word	.L24
 1922 01e0 3C020000 		.word	.L25
 1923 01e4 88020000 		.word	.L26
 1924 01e8 D4020000 		.word	.L27
 1925              	.L24:
  55:../gpio.c     **** 		case INPUT:
  56:../gpio.c     **** 			// COMPLETAR: poner en rPCONG 00 a partir de la posiciÃ³n pos para
  57:../gpio.c     **** 			// configurar como pin de entrada el pin indicado por el parÃ¡metro pin
  58:../gpio.c     **** 			rPCONG &= ~(1 << pos);  	 // 0
 1926              		.loc 1 58 0
 1927 01ec 44319FE5 		ldr	r3, .L30
 1928 01f0 40219FE5 		ldr	r2, .L30
 1929 01f4 001092E5 		ldr	r1, [r2, #0]
 1930 01f8 0100A0E3 		mov	r0, #1
 1931 01fc 10201BE5 		ldr	r2, [fp, #-16]
 1932 0200 1022A0E1 		mov	r2, r0, asl r2
 1933 0204 0220E0E1 		mvn	r2, r2
 1934 0208 022001E0 		and	r2, r1, r2
 1935 020c 002083E5 		str	r2, [r3, #0]
  59:../gpio.c     **** 			rPCONG &= ~(1 << (pos + 1)); // 0
 1936              		.loc 1 59 0
 1937 0210 20319FE5 		ldr	r3, .L30
 1938 0214 1C219FE5 		ldr	r2, .L30
 1939 0218 001092E5 		ldr	r1, [r2, #0]
 1940 021c 10201BE5 		ldr	r2, [fp, #-16]
 1941 0220 012082E2 		add	r2, r2, #1
 1942 0224 0100A0E3 		mov	r0, #1
 1943 0228 1022A0E1 		mov	r2, r0, asl r2
 1944 022c 0220E0E1 		mvn	r2, r2
 1945 0230 022001E0 		and	r2, r1, r2
 1946 0234 002083E5 		str	r2, [r3, #0]
  60:../gpio.c     **** 			break;
 1947              		.loc 1 60 0
 1948 0238 390000EA 		b	.L29
 1949              	.L25:
  61:../gpio.c     **** 		case OUTPUT:
  62:../gpio.c     **** 			// COMPLETAR: poner en rPCONG 01 a partir de la posiciÃ³n pos para
  63:../gpio.c     **** 			// configurar como pin de salida el pin indicado por el parÃ¡metro pin
  64:../gpio.c     **** 			rPCONG |= 1 << pos;			 // 1
 1950              		.loc 1 64 0
 1951 023c F4309FE5 		ldr	r3, .L30
 1952 0240 F0209FE5 		ldr	r2, .L30
 1953 0244 001092E5 		ldr	r1, [r2, #0]
 1954 0248 0100A0E3 		mov	r0, #1
 1955 024c 10201BE5 		ldr	r2, [fp, #-16]
 1956 0250 1022A0E1 		mov	r2, r0, asl r2
 1957 0254 022081E1 		orr	r2, r1, r2
 1958 0258 002083E5 		str	r2, [r3, #0]
  65:../gpio.c     **** 			rPCONG &= ~(1 << (pos + 1)); // 0
 1959              		.loc 1 65 0
 1960 025c D4309FE5 		ldr	r3, .L30
 1961 0260 D0209FE5 		ldr	r2, .L30
 1962 0264 001092E5 		ldr	r1, [r2, #0]
 1963 0268 10201BE5 		ldr	r2, [fp, #-16]
 1964 026c 012082E2 		add	r2, r2, #1
 1965 0270 0100A0E3 		mov	r0, #1
 1966 0274 1022A0E1 		mov	r2, r0, asl r2
 1967 0278 0220E0E1 		mvn	r2, r2
 1968 027c 022001E0 		and	r2, r1, r2
 1969 0280 002083E5 		str	r2, [r3, #0]
  66:../gpio.c     **** 			break;
 1970              		.loc 1 66 0
 1971 0284 260000EA 		b	.L29
 1972              	.L26:
  67:../gpio.c     **** 		case SIGOUT:
  68:../gpio.c     **** 			// COMPLETAR: poner en rPCONG 10 a partir de la posiciÃ³n pos para
  69:../gpio.c     **** 			// que salga la seÃ±al interna correspondiente por el pin indicado
  70:../gpio.c     **** 			// por el parÃ¡metro pin
  71:../gpio.c     **** 			rPCONG &= ~(1 << pos); 		// 0
 1973              		.loc 1 71 0
 1974 0288 A8309FE5 		ldr	r3, .L30
 1975 028c A4209FE5 		ldr	r2, .L30
 1976 0290 001092E5 		ldr	r1, [r2, #0]
 1977 0294 0100A0E3 		mov	r0, #1
 1978 0298 10201BE5 		ldr	r2, [fp, #-16]
 1979 029c 1022A0E1 		mov	r2, r0, asl r2
 1980 02a0 0220E0E1 		mvn	r2, r2
 1981 02a4 022001E0 		and	r2, r1, r2
 1982 02a8 002083E5 		str	r2, [r3, #0]
  72:../gpio.c     **** 			rPCONG |= 1 << (pos + 1);	// 1
 1983              		.loc 1 72 0
 1984 02ac 84309FE5 		ldr	r3, .L30
 1985 02b0 80209FE5 		ldr	r2, .L30
 1986 02b4 001092E5 		ldr	r1, [r2, #0]
 1987 02b8 10201BE5 		ldr	r2, [fp, #-16]
 1988 02bc 012082E2 		add	r2, r2, #1
 1989 02c0 0100A0E3 		mov	r0, #1
 1990 02c4 1022A0E1 		mov	r2, r0, asl r2
 1991 02c8 022081E1 		orr	r2, r1, r2
 1992 02cc 002083E5 		str	r2, [r3, #0]
  73:../gpio.c     **** 			break;
 1993              		.loc 1 73 0
 1994 02d0 130000EA 		b	.L29
 1995              	.L27:
  74:../gpio.c     **** 		case EINT:
  75:../gpio.c     **** 			// COMPLETAR: poner en rPCONG 11 a partir de la posiciÃ³n pos para
  76:../gpio.c     **** 			// habilitar la generaciÃ³n de interrupciones externas por el pin
  77:../gpio.c     **** 			// indicado por el parÃ¡metro pin
  78:../gpio.c     **** 			rPCONG |= 1 << pos;			// 1
 1996              		.loc 1 78 0
 1997 02d4 5C309FE5 		ldr	r3, .L30
 1998 02d8 58209FE5 		ldr	r2, .L30
 1999 02dc 001092E5 		ldr	r1, [r2, #0]
 2000 02e0 0100A0E3 		mov	r0, #1
 2001 02e4 10201BE5 		ldr	r2, [fp, #-16]
 2002 02e8 1022A0E1 		mov	r2, r0, asl r2
 2003 02ec 022081E1 		orr	r2, r1, r2
 2004 02f0 002083E5 		str	r2, [r3, #0]
  79:../gpio.c     **** 			rPCONG |= 1 << (pos + 1);	// 1
 2005              		.loc 1 79 0
 2006 02f4 3C309FE5 		ldr	r3, .L30
 2007 02f8 38209FE5 		ldr	r2, .L30
 2008 02fc 001092E5 		ldr	r1, [r2, #0]
 2009 0300 10201BE5 		ldr	r2, [fp, #-16]
 2010 0304 012082E2 		add	r2, r2, #1
 2011 0308 0100A0E3 		mov	r0, #1
 2012 030c 1022A0E1 		mov	r2, r0, asl r2
 2013 0310 022081E1 		orr	r2, r1, r2
 2014 0314 002083E5 		str	r2, [r3, #0]
  80:../gpio.c     **** 			break;
 2015              		.loc 1 80 0
 2016 0318 010000EA 		b	.L29
 2017              	.L23:
  81:../gpio.c     **** 		default:
  82:../gpio.c     **** 			return -1;
 2018              		.loc 1 82 0
 2019 031c 0030E0E3 		mvn	r3, #0
 2020 0320 000000EA 		b	.L22
 2021              	.L29:
  83:../gpio.c     **** 	}
  84:../gpio.c     **** 
  85:../gpio.c     **** 	return 0;
 2022              		.loc 1 85 0
 2023 0324 0030A0E3 		mov	r3, #0
 2024              	.L22:
  86:../gpio.c     **** }
 2025              		.loc 1 86 0
 2026 0328 0300A0E1 		mov	r0, r3
 2027 032c 0CD04BE2 		sub	sp, fp, #12
 2028 0330 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2029 0334 1EFF2FE1 		bx	lr
 2030              	.L31:
 2031              		.align	2
 2032              	.L30:
 2033 0338 4000D201 		.word	30539840
 2034              		.cfi_endproc
 2035              	.LFE2:
 2037              		.align	2
 2038              		.global	portG_eint_trig
 2040              	portG_eint_trig:
 2041              	.LFB3:
  87:../gpio.c     **** 
  88:../gpio.c     **** int portG_eint_trig(int pin, enum trigger trig)
  89:../gpio.c     **** {
 2042              		.loc 1 89 0
 2043              		.cfi_startproc
 2044              		@ Function supports interworking.
 2045              		@ args = 0, pretend = 0, frame = 8
 2046              		@ frame_needed = 1, uses_anonymous_args = 0
 2047 033c 0DC0A0E1 		mov	ip, sp
 2048              	.LCFI6:
 2049              		.cfi_def_cfa_register 12
 2050 0340 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2051 0344 04B04CE2 		sub	fp, ip, #4
 2052              		.cfi_offset 14, -8
 2053              		.cfi_offset 13, -12
 2054              		.cfi_offset 11, -16
 2055              	.LCFI7:
 2056              		.cfi_def_cfa 11, 4
 2057 0348 08D04DE2 		sub	sp, sp, #8
 2058 034c 10000BE5 		str	r0, [fp, #-16]
 2059 0350 0130A0E1 		mov	r3, r1
 2060 0354 11304BE5 		strb	r3, [fp, #-17]
  90:../gpio.c     **** 	// A COMPLETAR EN LA SIGUIENTE DE LA PRÃ�CTICA
  91:../gpio.c     **** 	return 0;
 2061              		.loc 1 91 0
 2062 0358 0030A0E3 		mov	r3, #0
  92:../gpio.c     **** }
 2063              		.loc 1 92 0
 2064 035c 0300A0E1 		mov	r0, r3
 2065 0360 0CD04BE2 		sub	sp, fp, #12
 2066 0364 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2067 0368 1EFF2FE1 		bx	lr
 2068              		.cfi_endproc
 2069              	.LFE3:
 2071              		.align	2
 2072              		.global	portG_write
 2074              	portG_write:
 2075              	.LFB4:
  93:../gpio.c     **** 
  94:../gpio.c     **** int portG_write(int pin, enum digital val)
  95:../gpio.c     **** {
 2076              		.loc 1 95 0
 2077              		.cfi_startproc
 2078              		@ Function supports interworking.
 2079              		@ args = 0, pretend = 0, frame = 16
 2080              		@ frame_needed = 1, uses_anonymous_args = 0
 2081 036c 0DC0A0E1 		mov	ip, sp
 2082              	.LCFI8:
 2083              		.cfi_def_cfa_register 12
 2084 0370 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2085 0374 04B04CE2 		sub	fp, ip, #4
 2086              		.cfi_offset 14, -8
 2087              		.cfi_offset 13, -12
 2088              		.cfi_offset 11, -16
 2089              	.LCFI9:
 2090              		.cfi_def_cfa 11, 4
 2091 0378 10D04DE2 		sub	sp, sp, #16
 2092 037c 18000BE5 		str	r0, [fp, #-24]
 2093 0380 0130A0E1 		mov	r3, r1
 2094 0384 19304BE5 		strb	r3, [fp, #-25]
  96:../gpio.c     **** 	int pos = pin*2;
 2095              		.loc 1 96 0
 2096 0388 18301BE5 		ldr	r3, [fp, #-24]
 2097 038c 8330A0E1 		mov	r3, r3, asl #1
 2098 0390 10300BE5 		str	r3, [fp, #-16]
  97:../gpio.c     **** 
  98:../gpio.c     **** 	if (pin < 0 || pin > 7)
 2099              		.loc 1 98 0
 2100 0394 18301BE5 		ldr	r3, [fp, #-24]
 2101 0398 000053E3 		cmp	r3, #0
 2102 039c 020000BA 		blt	.L34
 2103              		.loc 1 98 0 is_stmt 0 discriminator 1
 2104 03a0 18301BE5 		ldr	r3, [fp, #-24]
 2105 03a4 070053E3 		cmp	r3, #7
 2106 03a8 010000DA 		ble	.L35
 2107              	.L34:
  99:../gpio.c     **** 		return -1; // indica error
 2108              		.loc 1 99 0 is_stmt 1
 2109 03ac 0030E0E3 		mvn	r3, #0
 2110 03b0 270000EA 		b	.L36
 2111              	.L35:
 100:../gpio.c     **** 
 101:../gpio.c     **** 	if (val < 0 || val > 1)
 2112              		.loc 1 101 0
 2113 03b4 19305BE5 		ldrb	r3, [fp, #-25]	@ zero_extendqisi2
 2114 03b8 010053E3 		cmp	r3, #1
 2115 03bc 0100009A 		bls	.L37
 102:../gpio.c     **** 		return -1; // indica error
 2116              		.loc 1 102 0
 2117 03c0 0030E0E3 		mvn	r3, #0
 2118 03c4 220000EA 		b	.L36
 2119              	.L37:
 103:../gpio.c     **** 
 104:../gpio.c     **** 	if ((rPCONG & (0x3 << pos)) != (0x1 << pos))
 2120              		.loc 1 104 0
 2121 03c8 94309FE5 		ldr	r3, .L41
 2122 03cc 002093E5 		ldr	r2, [r3, #0]
 2123 03d0 0310A0E3 		mov	r1, #3
 2124 03d4 10301BE5 		ldr	r3, [fp, #-16]
 2125 03d8 1133A0E1 		mov	r3, r1, asl r3
 2126 03dc 032002E0 		and	r2, r2, r3
 2127 03e0 0110A0E3 		mov	r1, #1
 2128 03e4 10301BE5 		ldr	r3, [fp, #-16]
 2129 03e8 1133A0E1 		mov	r3, r1, asl r3
 2130 03ec 030052E1 		cmp	r2, r3
 2131 03f0 0100000A 		beq	.L38
 105:../gpio.c     **** 		return -1; // indica error
 2132              		.loc 1 105 0
 2133 03f4 0030E0E3 		mvn	r3, #0
 2134 03f8 150000EA 		b	.L36
 2135              	.L38:
 106:../gpio.c     **** 
 107:../gpio.c     **** 	if (val)
 2136              		.loc 1 107 0
 2137 03fc 19305BE5 		ldrb	r3, [fp, #-25]	@ zero_extendqisi2
 2138 0400 000053E3 		cmp	r3, #0
 2139 0404 0800000A 		beq	.L39
 108:../gpio.c     **** 		// COMPLETAR: poner en rPDATG el bit indicado por pin a 1
 109:../gpio.c     **** 		rPDATG |= 1 << pin;
 2140              		.loc 1 109 0
 2141 0408 58309FE5 		ldr	r3, .L41+4
 2142 040c 54209FE5 		ldr	r2, .L41+4
 2143 0410 001092E5 		ldr	r1, [r2, #0]
 2144 0414 0100A0E3 		mov	r0, #1
 2145 0418 18201BE5 		ldr	r2, [fp, #-24]
 2146 041c 1022A0E1 		mov	r2, r0, asl r2
 2147 0420 022081E1 		orr	r2, r1, r2
 2148 0424 002083E5 		str	r2, [r3, #0]
 2149 0428 080000EA 		b	.L40
 2150              	.L39:
 110:../gpio.c     **** 	else
 111:../gpio.c     **** 		// COMPLETAR: poner en rPDATG el bit indicado por pin a 0
 112:../gpio.c     **** 		rPDATG &= ~(1 << pin);
 2151              		.loc 1 112 0
 2152 042c 34309FE5 		ldr	r3, .L41+4
 2153 0430 30209FE5 		ldr	r2, .L41+4
 2154 0434 001092E5 		ldr	r1, [r2, #0]
 2155 0438 0100A0E3 		mov	r0, #1
 2156 043c 18201BE5 		ldr	r2, [fp, #-24]
 2157 0440 1022A0E1 		mov	r2, r0, asl r2
 2158 0444 0220E0E1 		mvn	r2, r2
 2159 0448 022001E0 		and	r2, r1, r2
 2160 044c 002083E5 		str	r2, [r3, #0]
 2161              	.L40:
 113:../gpio.c     **** 
 114:../gpio.c     **** 	return 0;
 2162              		.loc 1 114 0
 2163 0450 0030A0E3 		mov	r3, #0
 2164              	.L36:
 115:../gpio.c     **** }
 2165              		.loc 1 115 0
 2166 0454 0300A0E1 		mov	r0, r3
 2167 0458 0CD04BE2 		sub	sp, fp, #12
 2168 045c 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2169 0460 1EFF2FE1 		bx	lr
 2170              	.L42:
 2171              		.align	2
 2172              	.L41:
 2173 0464 4000D201 		.word	30539840
 2174 0468 4400D201 		.word	30539844
 2175              		.cfi_endproc
 2176              	.LFE4:
 2178              		.align	2
 2179              		.global	portG_read
 2181              	portG_read:
 2182              	.LFB5:
 116:../gpio.c     **** 
 117:../gpio.c     **** int portG_read(int pin, enum digital* val)
 118:../gpio.c     **** {
 2183              		.loc 1 118 0
 2184              		.cfi_startproc
 2185              		@ Function supports interworking.
 2186              		@ args = 0, pretend = 0, frame = 16
 2187              		@ frame_needed = 1, uses_anonymous_args = 0
 2188 046c 0DC0A0E1 		mov	ip, sp
 2189              	.LCFI10:
 2190              		.cfi_def_cfa_register 12
 2191 0470 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2192 0474 04B04CE2 		sub	fp, ip, #4
 2193              		.cfi_offset 14, -8
 2194              		.cfi_offset 13, -12
 2195              		.cfi_offset 11, -16
 2196              	.LCFI11:
 2197              		.cfi_def_cfa 11, 4
 2198 0478 10D04DE2 		sub	sp, sp, #16
 2199 047c 18000BE5 		str	r0, [fp, #-24]
 2200 0480 1C100BE5 		str	r1, [fp, #-28]
 119:../gpio.c     **** 	int pos = pin*2;
 2201              		.loc 1 119 0
 2202 0484 18301BE5 		ldr	r3, [fp, #-24]
 2203 0488 8330A0E1 		mov	r3, r3, asl #1
 2204 048c 10300BE5 		str	r3, [fp, #-16]
 120:../gpio.c     **** 
 121:../gpio.c     **** 	if (pin < 0 || pin > 7)
 2205              		.loc 1 121 0
 2206 0490 18301BE5 		ldr	r3, [fp, #-24]
 2207 0494 000053E3 		cmp	r3, #0
 2208 0498 020000BA 		blt	.L44
 2209              		.loc 1 121 0 is_stmt 0 discriminator 1
 2210 049c 18301BE5 		ldr	r3, [fp, #-24]
 2211 04a0 070053E3 		cmp	r3, #7
 2212 04a4 010000DA 		ble	.L45
 2213              	.L44:
 122:../gpio.c     **** 		return -1; // indica error
 2214              		.loc 1 122 0 is_stmt 1
 2215 04a8 0030E0E3 		mvn	r3, #0
 2216 04ac 190000EA 		b	.L46
 2217              	.L45:
 123:../gpio.c     **** 
 124:../gpio.c     **** 	if (rPCONG & (0x3 << pos))
 2218              		.loc 1 124 0
 2219 04b0 70309FE5 		ldr	r3, .L50
 2220 04b4 002093E5 		ldr	r2, [r3, #0]
 2221 04b8 0310A0E3 		mov	r1, #3
 2222 04bc 10301BE5 		ldr	r3, [fp, #-16]
 2223 04c0 1133A0E1 		mov	r3, r1, asl r3
 2224 04c4 033002E0 		and	r3, r2, r3
 2225 04c8 000053E3 		cmp	r3, #0
 2226 04cc 0100000A 		beq	.L47
 125:../gpio.c     **** 		return -1; // indica error
 2227              		.loc 1 125 0
 2228 04d0 0030E0E3 		mvn	r3, #0
 2229 04d4 0F0000EA 		b	.L46
 2230              	.L47:
 126:../gpio.c     **** 
 127:../gpio.c     **** 	/*COMPLETAR: true si estÃ¡ a 1 en rPDATG el pin indicado por el parÃ¡metro pin*/
 128:../gpio.c     **** 	if (rPDATG & (1 << pin))
 2231              		.loc 1 128 0
 2232 04d8 4C309FE5 		ldr	r3, .L50+4
 2233 04dc 002093E5 		ldr	r2, [r3, #0]
 2234 04e0 0110A0E3 		mov	r1, #1
 2235 04e4 18301BE5 		ldr	r3, [fp, #-24]
 2236 04e8 1133A0E1 		mov	r3, r1, asl r3
 2237 04ec 033002E0 		and	r3, r2, r3
 2238 04f0 000053E3 		cmp	r3, #0
 2239 04f4 0300000A 		beq	.L48
 129:../gpio.c     **** 		*val = HIGH;
 2240              		.loc 1 129 0
 2241 04f8 1C301BE5 		ldr	r3, [fp, #-28]
 2242 04fc 0120A0E3 		mov	r2, #1
 2243 0500 0020C3E5 		strb	r2, [r3, #0]
 2244 0504 020000EA 		b	.L49
 2245              	.L48:
 130:../gpio.c     **** 	else
 131:../gpio.c     **** 		*val = LOW;
 2246              		.loc 1 131 0
 2247 0508 1C301BE5 		ldr	r3, [fp, #-28]
 2248 050c 0020A0E3 		mov	r2, #0
 2249 0510 0020C3E5 		strb	r2, [r3, #0]
 2250              	.L49:
 132:../gpio.c     **** 
 133:../gpio.c     **** 	return 0;
 2251              		.loc 1 133 0
 2252 0514 0030A0E3 		mov	r3, #0
 2253              	.L46:
 134:../gpio.c     **** }
 2254              		.loc 1 134 0
 2255 0518 0300A0E1 		mov	r0, r3
 2256 051c 0CD04BE2 		sub	sp, fp, #12
 2257 0520 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2258 0524 1EFF2FE1 		bx	lr
 2259              	.L51:
 2260              		.align	2
 2261              	.L50:
 2262 0528 4000D201 		.word	30539840
 2263 052c 4400D201 		.word	30539844
 2264              		.cfi_endproc
 2265              	.LFE5:
 2267              		.align	2
 2268              		.global	portG_conf_pup
 2270              	portG_conf_pup:
 2271              	.LFB6:
 135:../gpio.c     **** 
 136:../gpio.c     **** int portG_conf_pup(int pin, enum enable st)
 137:../gpio.c     **** {
 2272              		.loc 1 137 0
 2273              		.cfi_startproc
 2274              		@ Function supports interworking.
 2275              		@ args = 0, pretend = 0, frame = 8
 2276              		@ frame_needed = 1, uses_anonymous_args = 0
 2277 0530 0DC0A0E1 		mov	ip, sp
 2278              	.LCFI12:
 2279              		.cfi_def_cfa_register 12
 2280 0534 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2281 0538 04B04CE2 		sub	fp, ip, #4
 2282              		.cfi_offset 14, -8
 2283              		.cfi_offset 13, -12
 2284              		.cfi_offset 11, -16
 2285              	.LCFI13:
 2286              		.cfi_def_cfa 11, 4
 2287 053c 08D04DE2 		sub	sp, sp, #8
 2288 0540 10000BE5 		str	r0, [fp, #-16]
 2289 0544 0130A0E1 		mov	r3, r1
 2290 0548 11304BE5 		strb	r3, [fp, #-17]
 138:../gpio.c     **** 	if (pin < 0 || pin > 7)
 2291              		.loc 1 138 0
 2292 054c 10301BE5 		ldr	r3, [fp, #-16]
 2293 0550 000053E3 		cmp	r3, #0
 2294 0554 020000BA 		blt	.L53
 2295              		.loc 1 138 0 is_stmt 0 discriminator 1
 2296 0558 10301BE5 		ldr	r3, [fp, #-16]
 2297 055c 070053E3 		cmp	r3, #7
 2298 0560 010000DA 		ble	.L54
 2299              	.L53:
 139:../gpio.c     **** 		return -1; // indica error
 2300              		.loc 1 139 0 is_stmt 1
 2301 0564 0030E0E3 		mvn	r3, #0
 2302 0568 1D0000EA 		b	.L55
 2303              	.L54:
 140:../gpio.c     **** 
 141:../gpio.c     **** 	if (st != ENABLE && st != DISABLE)
 2304              		.loc 1 141 0
 2305 056c 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2306 0570 010053E3 		cmp	r3, #1
 2307 0574 0400000A 		beq	.L56
 2308              		.loc 1 141 0 is_stmt 0 discriminator 1
 2309 0578 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2310 057c 000053E3 		cmp	r3, #0
 2311 0580 0100000A 		beq	.L56
 142:../gpio.c     **** 		return -1; // indica error
 2312              		.loc 1 142 0 is_stmt 1
 2313 0584 0030E0E3 		mvn	r3, #0
 2314 0588 150000EA 		b	.L55
 2315              	.L56:
 143:../gpio.c     **** 
 144:../gpio.c     **** 	if (st == ENABLE)
 2316              		.loc 1 144 0
 2317 058c 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2318 0590 010053E3 		cmp	r3, #1
 2319 0594 0900001A 		bne	.L57
 145:../gpio.c     **** 		// COMPLETAR: poner el pin de rPUPG indicado por el parametro pin al valor adecuado,
 146:../gpio.c     **** 		// para activar la resistencia de pull-up
 147:../gpio.c     **** 		rPUPG &= ~(1 << pin);
 2320              		.loc 1 147 0
 2321 0598 54309FE5 		ldr	r3, .L59
 2322 059c 50209FE5 		ldr	r2, .L59
 2323 05a0 001092E5 		ldr	r1, [r2, #0]
 2324 05a4 0100A0E3 		mov	r0, #1
 2325 05a8 10201BE5 		ldr	r2, [fp, #-16]
 2326 05ac 1022A0E1 		mov	r2, r0, asl r2
 2327 05b0 0220E0E1 		mvn	r2, r2
 2328 05b4 022001E0 		and	r2, r1, r2
 2329 05b8 002083E5 		str	r2, [r3, #0]
 2330 05bc 070000EA 		b	.L58
 2331              	.L57:
 148:../gpio.c     **** 	else
 149:../gpio.c     **** 		// COMPLETAR: poner el pin de rPUPG indicado por el parametro pin al valor adecuado,
 150:../gpio.c     **** 		// para desactivar la resistencia de pull-up
 151:../gpio.c     **** 		rPUPG |= 1 << pin;
 2332              		.loc 1 151 0
 2333 05c0 2C309FE5 		ldr	r3, .L59
 2334 05c4 28209FE5 		ldr	r2, .L59
 2335 05c8 001092E5 		ldr	r1, [r2, #0]
 2336 05cc 0100A0E3 		mov	r0, #1
 2337 05d0 10201BE5 		ldr	r2, [fp, #-16]
 2338 05d4 1022A0E1 		mov	r2, r0, asl r2
 2339 05d8 022081E1 		orr	r2, r1, r2
 2340 05dc 002083E5 		str	r2, [r3, #0]
 2341              	.L58:
 152:../gpio.c     **** 
 153:../gpio.c     **** 	return 0;
 2342              		.loc 1 153 0
 2343 05e0 0030A0E3 		mov	r3, #0
 2344              	.L55:
 154:../gpio.c     **** }
 2345              		.loc 1 154 0
 2346 05e4 0300A0E1 		mov	r0, r3
 2347 05e8 0CD04BE2 		sub	sp, fp, #12
 2348 05ec 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2349 05f0 1EFF2FE1 		bx	lr
 2350              	.L60:
 2351              		.align	2
 2352              	.L59:
 2353 05f4 4800D201 		.word	30539848
 2354              		.cfi_endproc
 2355              	.LFE6:
 2357              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 gpio.c
C:\Users\Pedro\AppData\Local\Temp\ccXxS6uz.s:1698   .text:00000000 $a
C:\Users\Pedro\AppData\Local\Temp\ccXxS6uz.s:1701   .text:00000000 portB_conf
C:\Users\Pedro\AppData\Local\Temp\ccXxS6uz.s:1784   .text:000000c4 $d
C:\Users\Pedro\AppData\Local\Temp\ccXxS6uz.s:1788   .text:000000c8 $a
C:\Users\Pedro\AppData\Local\Temp\ccXxS6uz.s:1791   .text:000000c8 portB_write
C:\Users\Pedro\AppData\Local\Temp\ccXxS6uz.s:1870   .text:00000180 $d
C:\Users\Pedro\AppData\Local\Temp\ccXxS6uz.s:1874   .text:00000184 $a
C:\Users\Pedro\AppData\Local\Temp\ccXxS6uz.s:1877   .text:00000184 portG_conf
C:\Users\Pedro\AppData\Local\Temp\ccXxS6uz.s:1921   .text:000001dc $d
C:\Users\Pedro\AppData\Local\Temp\ccXxS6uz.s:1927   .text:000001ec $a
C:\Users\Pedro\AppData\Local\Temp\ccXxS6uz.s:2033   .text:00000338 $d
C:\Users\Pedro\AppData\Local\Temp\ccXxS6uz.s:2037   .text:0000033c $a
C:\Users\Pedro\AppData\Local\Temp\ccXxS6uz.s:2040   .text:0000033c portG_eint_trig
C:\Users\Pedro\AppData\Local\Temp\ccXxS6uz.s:2074   .text:0000036c portG_write
C:\Users\Pedro\AppData\Local\Temp\ccXxS6uz.s:2173   .text:00000464 $d
C:\Users\Pedro\AppData\Local\Temp\ccXxS6uz.s:2178   .text:0000046c $a
C:\Users\Pedro\AppData\Local\Temp\ccXxS6uz.s:2181   .text:0000046c portG_read
C:\Users\Pedro\AppData\Local\Temp\ccXxS6uz.s:2262   .text:00000528 $d
C:\Users\Pedro\AppData\Local\Temp\ccXxS6uz.s:2267   .text:00000530 $a
C:\Users\Pedro\AppData\Local\Temp\ccXxS6uz.s:2270   .text:00000530 portG_conf_pup
C:\Users\Pedro\AppData\Local\Temp\ccXxS6uz.s:2353   .text:000005f4 $d
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
